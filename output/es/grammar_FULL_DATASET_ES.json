{
  "grammarEntries" : [ {
    "id" : "1",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos lugar de fallecimiento de ($x | Person_NP) ", "Dame todos lugares de fallecimiento de ($x | Person_NP) ", "Dame una lista lugar de fallecimiento de ($x | Person_NP) ", "Dame una lista lugares de fallecimiento de ($x | Person_NP) ", "Muéstrame todos lugar de fallecimiento de ($x | Person_NP) ", "¿Cuál es lugar de fallecimiento de ($x | Person_NP)? ", "¿Cuál fue lugar de fallecimiento de ($x | Person_NP)? ", "¿Cuál fueron lugares de fallecimiento de ($x | Person_NP)? ", "¿Cuál son lugares de fallecimiento de ($x | Person_NP)? ", "¿Cuáles son lugares de fallecimiento de ($x | Person_NP)? ", "¿En qué lugar de fallecimiento esta ($x | Person_NP)? ", "¿Qué ciudades son lugar de fallecimiento de ($x | Person_NP)? ", "¿Qué lugar de fallecimiento tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "2",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Person_NP)? ", "son ($x | THING_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "3",
    "lexicalEntryUri" : "http://localhost:8080#deathPlace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Person_NP)? ", "son ($x | THING_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "4",
    "lexicalEntryUri" : "http://localhost:8080#spitzname",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos apodo de ($x | City_NP) ", "Dame todos apodos de ($x | City_NP) ", "Dame una lista apodo de ($x | City_NP) ", "Dame una lista apodos de ($x | City_NP) ", "Muéstrame todos apodo de ($x | City_NP) ", "¿Cuál es apodo de ($x | City_NP)? ", "¿Cuál fue apodo de ($x | City_NP)? ", "¿Cuál fueron apodos de ($x | City_NP)? ", "¿Cuál son apodos de ($x | City_NP)? ", "¿Cuáles son apodos de ($x | City_NP)? ", "¿En qué apodo esta ($x | City_NP)? ", "¿Qué apodo tiene ($x | City_NP)? ", "¿Qué ciudades son apodo de ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "5",
    "lexicalEntryUri" : "http://localhost:8080#spitzname",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "6",
    "lexicalEntryUri" : "http://localhost:8080#spitzname",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/nickname> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "7",
    "lexicalEntryUri" : "http://localhost:8080#Partei",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos partido de ($x | Politician_NP) ", "Dame todos partidos de ($x | Politician_NP) ", "Dame una lista partido de ($x | Politician_NP) ", "Dame una lista partidos de ($x | Politician_NP) ", "Muéstrame todos partido de ($x | Politician_NP) ", "¿Cuál es partido de ($x | Politician_NP)? ", "¿Cuál fue partido de ($x | Politician_NP)? ", "¿Cuál fueron partidos de ($x | Politician_NP)? ", "¿Cuál son partidos de ($x | Politician_NP)? ", "¿Cuáles son partidos de ($x | Politician_NP)? ", "¿En qué partido esta ($x | Politician_NP)? ", "¿Qué ciudades son partido de ($x | Politician_NP)? ", "¿Qué partido tiene ($x | Politician_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "8",
    "lexicalEntryUri" : "http://localhost:8080#Partei",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Politician_NP)? ", "son ($x | THING_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "9",
    "lexicalEntryUri" : "http://localhost:8080#Partei",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Politician_NP)? ", "son ($x | THING_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/party> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "10",
    "lexicalEntryUri" : "http://localhost:8080#richtiger",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos verdadero nombre de ($x | FictionalCharacter_NP) ", "Dame todos verdaderos nombres de ($x | FictionalCharacter_NP) ", "Dame una lista verdadero nombre de ($x | FictionalCharacter_NP) ", "Dame una lista verdaderos nombres de ($x | FictionalCharacter_NP) ", "Muéstrame todos verdadero nombre de ($x | FictionalCharacter_NP) ", "¿Cuál es verdadero nombre de ($x | FictionalCharacter_NP)? ", "¿Cuál fue verdadero nombre de ($x | FictionalCharacter_NP)? ", "¿Cuál fueron verdaderos nombres de ($x | FictionalCharacter_NP)? ", "¿Cuál son verdaderos nombres de ($x | FictionalCharacter_NP)? ", "¿Cuáles son verdaderos nombres de ($x | FictionalCharacter_NP)? ", "¿En qué verdadero nombre esta ($x | FictionalCharacter_NP)? ", "¿Qué ciudades son verdadero nombre de ($x | FictionalCharacter_NP)? ", "¿Qué verdadero nombre tiene ($x | FictionalCharacter_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "11",
    "lexicalEntryUri" : "http://localhost:8080#richtiger",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | FictionalCharacter_NP)? ", "son ($x | THING_NP)   de ($x | FictionalCharacter_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "12",
    "lexicalEntryUri" : "http://localhost:8080#richtiger",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | FictionalCharacter_NP)? ", "son ($x | THING_NP)   de ($x | FictionalCharacter_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/alterEgo> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "13",
    "lexicalEntryUri" : "http://localhost:8080#ciudad_m�s_grande",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos ciudad m�s grande de ($x | Country_NP) ", "Dame todos ciudades m�s grandes de ($x | Country_NP) ", "Dame una lista ciudad m�s grande de ($x | Country_NP) ", "Dame una lista ciudades m�s grandes de ($x | Country_NP) ", "Muéstrame todos ciudad m�s grande de ($x | Country_NP) ", "¿Cuál es ciudad m�s grande de ($x | Country_NP)? ", "¿Cuál fue ciudad m�s grande de ($x | Country_NP)? ", "¿Cuál fueron ciudades m�s grandes de ($x | Country_NP)? ", "¿Cuál son ciudades m�s grandes de ($x | Country_NP)? ", "¿Cuáles son ciudades m�s grandes de ($x | Country_NP)? ", "¿En qué ciudad m�s grande esta ($x | Country_NP)? ", "¿Qué ciudad m�s grande tiene ($x | Country_NP)? ", "¿Qué feminine son ciudad m�s grande de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "14",
    "lexicalEntryUri" : "http://localhost:8080#ciudad_m�s_grande",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | City_NP)   de ($x | Country_NP)? ", "son ($x | City_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "15",
    "lexicalEntryUri" : "http://localhost:8080#ciudad_m�s_grande",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | City_NP)   de ($x | Country_NP)? ", "son ($x | City_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/largestCity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "16",
    "lexicalEntryUri" : "http://localhost:8080#sohn",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos hijo de ($x | Person_NP) ", "Dame todos hijos de ($x | Person_NP) ", "Dame una lista hijo de ($x | Person_NP) ", "Dame una lista hijos de ($x | Person_NP) ", "Muéstrame todos hijo de ($x | Person_NP) ", "¿Cuáles son hijos de ($x | Person_NP)? ", "¿En qué hijo esta ($x | Person_NP)? ", "¿Qué hijo tiene ($x | Person_NP)? ", "¿Qué series televisivas son hijo de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "17",
    "lexicalEntryUri" : "http://localhost:8080#sohn",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "18",
    "lexicalEntryUri" : "http://localhost:8080#sohn",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "19",
    "lexicalEntryUri" : "http://localhost:8080#hijo_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos hijo de ($x | Person_NP) ", "Dame todos hijos de ($x | Person_NP) ", "Dame una lista hijo de ($x | Person_NP) ", "Dame una lista hijos de ($x | Person_NP) ", "Muéstrame todos hijo de ($x | Person_NP) ", "¿Cuáles son hijos de ($x | Person_NP)? ", "¿En qué hijo esta ($x | Person_NP)? ", "¿Qué hijo tiene ($x | Person_NP)? ", "¿Qué series televisivas son hijo de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "20",
    "lexicalEntryUri" : "http://localhost:8080#hijo_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "21",
    "lexicalEntryUri" : "http://localhost:8080#hijo_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "22",
    "lexicalEntryUri" : "http://localhost:8080#pr�sident_von",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos presidente de ($x | Legislature_NP) ", "Dame todos presidentes de ($x | Legislature_NP) ", "Dame una lista presidente de ($x | Legislature_NP) ", "Dame una lista presidentes de ($x | Legislature_NP) ", "Muéstrame todos presidente de ($x | Legislature_NP) ", "¿Cuáles son presidentes de ($x | Legislature_NP)? ", "¿En qué presidente esta ($x | Legislature_NP)? ", "¿Qué presidente tiene ($x | Legislature_NP)? ", "¿Qué series televisivas son presidente de ($x | Legislature_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "23",
    "lexicalEntryUri" : "http://localhost:8080#pr�sident_von",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Legislature_NP)? ", "son ($x | Person_NP)   de ($x | Legislature_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "24",
    "lexicalEntryUri" : "http://localhost:8080#pr�sident_von",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Legislature",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Legislature_NP)? ", "son ($x | Person_NP)   de ($x | Legislature_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leader> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "25",
    "lexicalEntryUri" : "http://localhost:8080#c�digo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos c�digo de �rea de ($x | Place_NP) ", "Dame todos c�digos de �rea de ($x | Place_NP) ", "Dame una lista c�digo de �rea de ($x | Place_NP) ", "Dame una lista c�digos de �rea de ($x | Place_NP) ", "Muéstrame todos c�digo de �rea de ($x | Place_NP) ", "¿Cuál es c�digo de �rea de ($x | Place_NP)? ", "¿Cuál fue c�digo de �rea de ($x | Place_NP)? ", "¿Cuál fueron c�digos de �rea de ($x | Place_NP)? ", "¿Cuál son c�digos de �rea de ($x | Place_NP)? ", "¿Cuáles son c�digos de �rea de ($x | Place_NP)? ", "¿En qué c�digo de �rea esta ($x | Place_NP)? ", "¿Qué ciudades son c�digo de �rea de ($x | Place_NP)? ", "¿Qué c�digo de �rea tiene ($x | Place_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "26",
    "lexicalEntryUri" : "http://localhost:8080#c�digo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Place_NP)? ", "son ($x | THING_NP)   de ($x | Place_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "27",
    "lexicalEntryUri" : "http://localhost:8080#c�digo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Place_NP)? ", "son ($x | THING_NP)   de ($x | Place_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaCode> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "28",
    "lexicalEntryUri" : "http://localhost:8080#forma_de_gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos forma de gobierno de ($x | Country_NP) ", "Dame todos forma de gobiernos de ($x | Country_NP) ", "Dame una lista forma de gobierno de ($x | Country_NP) ", "Dame una lista forma de gobiernos de ($x | Country_NP) ", "Muéstrame todos forma de gobierno de ($x | Country_NP) ", "¿Cuál es forma de gobierno de ($x | Country_NP)? ", "¿Cuál fue forma de gobierno de ($x | Country_NP)? ", "¿Cuál fueron forma de gobiernos de ($x | Country_NP)? ", "¿Cuál son forma de gobiernos de ($x | Country_NP)? ", "¿Cuáles son forma de gobiernos de ($x | Country_NP)? ", "¿En qué forma de gobierno esta ($x | Country_NP)? ", "¿Qué forma de gobierno tiene ($x | Country_NP)? ", "¿Qué pa�ses son forma de gobierno de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "29",
    "lexicalEntryUri" : "http://localhost:8080#forma_de_gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | GovernmentType_NP)   de ($x | Country_NP)? ", "son ($x | GovernmentType_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "30",
    "lexicalEntryUri" : "http://localhost:8080#forma_de_gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | GovernmentType_NP)   de ($x | Country_NP)? ", "son ($x | GovernmentType_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "31",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos vicepresidente de ($x | Person_NP) ", "Dame todos vicepresidentes de ($x | Person_NP) ", "Dame una lista vicepresidente de ($x | Person_NP) ", "Dame una lista vicepresidentes de ($x | Person_NP) ", "Muéstrame todos vicepresidente de ($x | Person_NP) ", "¿Cuáles son vicepresidentes de ($x | Person_NP)? ", "¿En qué vicepresidente esta ($x | Person_NP)? ", "¿Qué series televisivas son vicepresidente de ($x | Person_NP)? ", "¿Qué vicepresidente tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "32",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "33",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "34",
    "lexicalEntryUri" : "http://localhost:8080#capital",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos capital de ($x | Country_NP) ", "Dame todos capitales de ($x | Country_NP) ", "Dame una lista capital de ($x | Country_NP) ", "Dame una lista capitales de ($x | Country_NP) ", "Muéstrame todos capital de ($x | Country_NP) ", "¿Cuál es capital de ($x | Country_NP)? ", "¿Cuál fue capital de ($x | Country_NP)? ", "¿Cuál fueron capitales de ($x | Country_NP)? ", "¿Cuál son capitales de ($x | Country_NP)? ", "¿Cuáles son capitales de ($x | Country_NP)? ", "¿En qué capital esta ($x | Country_NP)? ", "¿Qué capital tiene ($x | Country_NP)? ", "¿Qué feminine son capital de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "35",
    "lexicalEntryUri" : "http://localhost:8080#capital",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Place_NP)   de ($x | Country_NP)? ", "son ($x | Place_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "36",
    "lexicalEntryUri" : "http://localhost:8080#capital",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Place_NP)   de ($x | Country_NP)? ", "son ($x | Place_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/capital> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "37",
    "lexicalEntryUri" : "http://localhost:8080#m�sica",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos musicales de ($x | Person_NP) ", "Dame todos m�sica de ($x | Person_NP) ", "Dame una lista musicales de ($x | Person_NP) ", "Dame una lista m�sica de ($x | Person_NP) ", "Muéstrame todos m�sica de ($x | Person_NP) ", "¿Cuál es m�sica de ($x | Person_NP)? ", "¿Cuál fue m�sica de ($x | Person_NP)? ", "¿Cuál fueron musicales de ($x | Person_NP)? ", "¿Cuál son musicales de ($x | Person_NP)? ", "¿Cuáles son musicales de ($x | Person_NP)? ", "¿En qué m�sica esta ($x | Person_NP)? ", "¿Qué m�sica tiene ($x | Person_NP)? ", "¿Qué series televisivas son m�sica de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "38",
    "lexicalEntryUri" : "http://localhost:8080#m�sica",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Musical_NP)   de ($x | Person_NP)? ", "son ($x | Musical_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "39",
    "lexicalEntryUri" : "http://localhost:8080#m�sica",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Musical",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Musical_NP)   de ($x | Person_NP)? ", "son ($x | Musical_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "40",
    "lexicalEntryUri" : "http://localhost:8080#doctorado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos supervisor de doctorado de ($x | Person_NP) ", "Dame todos supervisores de doctorado de ($x | Person_NP) ", "Dame una lista supervisor de doctorado de ($x | Person_NP) ", "Dame una lista supervisores de doctorado de ($x | Person_NP) ", "Muéstrame todos supervisor de doctorado de ($x | Person_NP) ", "¿Cuáles son supervisores de doctorado de ($x | Person_NP)? ", "¿En qué supervisor de doctorado esta ($x | Person_NP)? ", "¿Qué series televisivas son supervisor de doctorado de ($x | Person_NP)? ", "¿Qué supervisor de doctorado tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "41",
    "lexicalEntryUri" : "http://localhost:8080#doctorado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "42",
    "lexicalEntryUri" : "http://localhost:8080#doctorado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/doctoralAdvisor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "43",
    "lexicalEntryUri" : "http://localhost:8080#gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos forma de gobierno de ($x | Country_NP) ", "Dame todos forma de gobiernos de ($x | Country_NP) ", "Dame una lista forma de gobierno de ($x | Country_NP) ", "Dame una lista forma de gobiernos de ($x | Country_NP) ", "Muéstrame todos forma de gobierno de ($x | Country_NP) ", "¿Cuál es forma de gobierno de ($x | Country_NP)? ", "¿Cuál fue forma de gobierno de ($x | Country_NP)? ", "¿Cuál fueron forma de gobiernos de ($x | Country_NP)? ", "¿Cuál son forma de gobiernos de ($x | Country_NP)? ", "¿Cuáles son forma de gobiernos de ($x | Country_NP)? ", "¿En qué forma de gobierno esta ($x | Country_NP)? ", "¿Qué forma de gobierno tiene ($x | Country_NP)? ", "¿Qué pa�ses son forma de gobierno de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "44",
    "lexicalEntryUri" : "http://localhost:8080#gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | GovernmentType_NP)   de ($x | Country_NP)? ", "son ($x | GovernmentType_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "45",
    "lexicalEntryUri" : "http://localhost:8080#gobierno",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "GovernmentType",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | GovernmentType_NP)   de ($x | Country_NP)? ", "son ($x | GovernmentType_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "46",
    "lexicalEntryUri" : "http://localhost:8080#editor_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos editor de ($x | WrittenWork_NP) ", "Dame todos editores de ($x | WrittenWork_NP) ", "Dame una lista editor de ($x | WrittenWork_NP) ", "Dame una lista editores de ($x | WrittenWork_NP) ", "Muéstrame todos editor de ($x | WrittenWork_NP) ", "¿Cuál es editor de ($x | WrittenWork_NP)? ", "¿Cuál fue editor de ($x | WrittenWork_NP)? ", "¿Cuál fueron editores de ($x | WrittenWork_NP)? ", "¿Cuál son editores de ($x | WrittenWork_NP)? ", "¿Cuáles son editores de ($x | WrittenWork_NP)? ", "¿En qué editor esta ($x | WrittenWork_NP)? ", "¿Qué dbo:Person son editor de ($x | WrittenWork_NP)? ", "¿Qué editor tiene ($x | WrittenWork_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "47",
    "lexicalEntryUri" : "http://localhost:8080#editor_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | WrittenWork_NP)? ", "son ($x | THING_NP)   de ($x | WrittenWork_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "48",
    "lexicalEntryUri" : "http://localhost:8080#editor_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "WrittenWork",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | WrittenWork_NP)? ", "son ($x | THING_NP)   de ($x | WrittenWork_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/editor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "49",
    "lexicalEntryUri" : "http://localhost:8080#Enkel",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos nieto de ($x | Person_NP) ", "Dame todos nietos de ($x | Person_NP) ", "Dame una lista nieto de ($x | Person_NP) ", "Dame una lista nietos de ($x | Person_NP) ", "Muéstrame todos nieto de ($x | Person_NP) ", "¿Cuáles son nietos de ($x | Person_NP)? ", "¿En qué nieto esta ($x | Person_NP)? ", "¿Qué nieto tiene ($x | Person_NP)? ", "¿Qué series televisivas son nieto de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "50",
    "lexicalEntryUri" : "http://localhost:8080#Enkel",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "51",
    "lexicalEntryUri" : "http://localhost:8080#Enkel",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "52",
    "lexicalEntryUri" : "http://localhost:8080#idioma_oficial_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos idioma oficial de ($x | Country_NP) ", "Dame todos idiomas oficiales de ($x | Country_NP) ", "Dame una lista idioma oficial de ($x | Country_NP) ", "Dame una lista idiomas oficiales de ($x | Country_NP) ", "Muéstrame todos idioma oficial de ($x | Country_NP) ", "¿Cuál es idioma oficial de ($x | Country_NP)? ", "¿Cuál fue idioma oficial de ($x | Country_NP)? ", "¿Cuál fueron idiomas oficiales de ($x | Country_NP)? ", "¿Cuál son idiomas oficiales de ($x | Country_NP)? ", "¿Cuáles son idiomas oficiales de ($x | Country_NP)? ", "¿En qué idioma oficial esta ($x | Country_NP)? ", "¿Qué idioma oficial tiene ($x | Country_NP)? ", "¿Qué pa�ses son idioma oficial de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "53",
    "lexicalEntryUri" : "http://localhost:8080#idioma_oficial_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Language_NP)   de ($x | Country_NP)? ", "son ($x | Language_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "54",
    "lexicalEntryUri" : "http://localhost:8080#idioma_oficial_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Language_NP)   de ($x | Country_NP)? ", "son ($x | Language_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/officialLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "55",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos zona horaria de ($x | City_NP) ", "Dame todos zonas horarias de ($x | City_NP) ", "Dame una lista zona horaria de ($x | City_NP) ", "Dame una lista zonas horarias de ($x | City_NP) ", "Muéstrame todos zona horaria de ($x | City_NP) ", "¿Cuál es zona horaria de ($x | City_NP)? ", "¿Cuál fue zona horaria de ($x | City_NP)? ", "¿Cuál fueron zonas horarias de ($x | City_NP)? ", "¿Cuál son zonas horarias de ($x | City_NP)? ", "¿Cuáles son zonas horarias de ($x | City_NP)? ", "¿En qué zona horaria esta ($x | City_NP)? ", "¿Qué ciudades son zona horaria de ($x | City_NP)? ", "¿Qué zona horaria tiene ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/timezone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "56",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/timezone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "57",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | City_NP)? ", "son ($x | THING_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/timezone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "58",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos vicepresidente bajo ($x | Politician_NP) ", "Dame todos vicepresidentes bajo ($x | Politician_NP) ", "Dame una lista vicepresidente bajo ($x | Politician_NP) ", "Dame una lista vicepresidentes bajo ($x | Politician_NP) ", "Muéstrame todos vicepresidente bajo ($x | Politician_NP) ", "¿Cuáles son vicepresidentes bajo ($x | Politician_NP)? ", "¿En qué vicepresidente esta ($x | Politician_NP)? ", "¿Qué series televisivas son vicepresidente bajo ($x | Politician_NP)? ", "¿Qué vicepresidente tiene ($x | Politician_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "59",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   bajo ($x | Politician_NP)? ", "son ($x | Person_NP)   bajo ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "60",
    "lexicalEntryUri" : "http://localhost:8080#vicepresidente_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   bajo ($x | Politician_NP)? ", "son ($x | Person_NP)   bajo ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/vicePresident> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "61",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Town",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos zona horaria de ($x | Town_NP) ", "Dame todos zonas horarias de ($x | Town_NP) ", "Dame una lista zona horaria de ($x | Town_NP) ", "Dame una lista zonas horarias de ($x | Town_NP) ", "Muéstrame todos zona horaria de ($x | Town_NP) ", "¿Cuál es zona horaria de ($x | Town_NP)? ", "¿Cuál fue zona horaria de ($x | Town_NP)? ", "¿Cuál fueron zonas horarias de ($x | Town_NP)? ", "¿Cuál son zonas horarias de ($x | Town_NP)? ", "¿Cuáles son zonas horarias de ($x | Town_NP)? ", "¿En qué zona horaria esta ($x | Town_NP)? ", "¿Qué ciudades son zona horaria de ($x | Town_NP)? ", "¿Qué zona horaria tiene ($x | Town_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "62",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Town",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Town_NP)? ", "son ($x | THING_NP)   de ($x | Town_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "63",
    "lexicalEntryUri" : "http://localhost:8080#Zeitzone_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Town",
    "returnType" : "THING",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | THING_NP)   de ($x | Town_NP)? ", "son ($x | THING_NP)   de ($x | Town_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/timeZone> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "64",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos alcalde de ($x | City_NP) ", "Dame todos alcaldes de ($x | City_NP) ", "Dame una lista alcalde de ($x | City_NP) ", "Dame una lista alcaldes de ($x | City_NP) ", "Muéstrame todos alcalde de ($x | City_NP) ", "¿Cuáles son alcaldes de ($x | City_NP)? ", "¿En qué alcalde esta ($x | City_NP)? ", "¿Qué alcalde tiene ($x | City_NP)? ", "¿Qué series televisivas son alcalde de ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "65",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "66",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/mayor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "67",
    "lexicalEntryUri" : "http://localhost:8080#padre_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos padre de ($x | Person_NP) ", "Dame todos padres de ($x | Person_NP) ", "Dame una lista padre de ($x | Person_NP) ", "Dame una lista padres de ($x | Person_NP) ", "Muéstrame todos padre de ($x | Person_NP) ", "¿Cuáles son padres de ($x | Person_NP)? ", "¿En qué padre esta ($x | Person_NP)? ", "¿Qué padre tiene ($x | Person_NP)? ", "¿Qué series televisivas son padre de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "68",
    "lexicalEntryUri" : "http://localhost:8080#padre_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "69",
    "lexicalEntryUri" : "http://localhost:8080#padre_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/father> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "70",
    "lexicalEntryUri" : "http://localhost:8080#sucesor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos sucesor de ($x | Politician_NP) ", "Dame todos sucesores de ($x | Politician_NP) ", "Dame una lista sucesor de ($x | Politician_NP) ", "Dame una lista sucesores de ($x | Politician_NP) ", "Muéstrame todos sucesor de ($x | Politician_NP) ", "¿Cuáles son sucesores de ($x | Politician_NP)? ", "¿En qué sucesor esta ($x | Politician_NP)? ", "¿Qué series televisivas son sucesor de ($x | Politician_NP)? ", "¿Qué sucesor tiene ($x | Politician_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "71",
    "lexicalEntryUri" : "http://localhost:8080#sucesor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Politician_NP)? ", "son ($x | Person_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "72",
    "lexicalEntryUri" : "http://localhost:8080#sucesor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Politician_NP)? ", "son ($x | Person_NP)   de ($x | Politician_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/successor> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "73",
    "lexicalEntryUri" : "http://localhost:8080#mujer",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos mujer de ($x | Person_NP) ", "Dame todos mujeres de ($x | Person_NP) ", "Dame una lista mujer de ($x | Person_NP) ", "Dame una lista mujeres de ($x | Person_NP) ", "Muéstrame todos mujer de ($x | Person_NP) ", "¿Cuáles son mujeres de ($x | Person_NP)? ", "¿En qué mujer esta ($x | Person_NP)? ", "¿Qué mujer tiene ($x | Person_NP)? ", "¿Qué series televisivas son mujer de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "74",
    "lexicalEntryUri" : "http://localhost:8080#mujer",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "75",
    "lexicalEntryUri" : "http://localhost:8080#mujer",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "76",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos alcalde de ($x | City_NP) ", "Dame todos alcaldes de ($x | City_NP) ", "Dame una lista alcalde de ($x | City_NP) ", "Dame una lista alcaldes de ($x | City_NP) ", "Muéstrame todos alcalde de ($x | City_NP) ", "¿Cuáles son alcaldes de ($x | City_NP)? ", "¿En qué alcalde esta ($x | City_NP)? ", "¿Qué alcalde tiene ($x | City_NP)? ", "¿Qué series televisivas son alcalde de ($x | City_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "77",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "78",
    "lexicalEntryUri" : "http://localhost:8080#alcalde_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | City_NP)? ", "son ($x | Person_NP)   de ($x | City_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/leaderName> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "79",
    "lexicalEntryUri" : "http://localhost:8080#especiales_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos especiales de ($x | TelevisionShow_NP) ", "Dame una lista especiales de ($x | TelevisionShow_NP) ", "Muéstrame todos especiales de ($x | TelevisionShow_NP) ", "¿Cuáles son especiales de ($x | TelevisionShow_NP)? ", "¿En qué especiales esta ($x | TelevisionShow_NP)? ", "¿Qué especiales tiene ($x | TelevisionShow_NP)? ", "¿Qué series televisivas son especiales de ($x | TelevisionShow_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "80",
    "lexicalEntryUri" : "http://localhost:8080#especiales_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | TelevisionShow_NP)? ", "son ($x | Person_NP)   de ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "81",
    "lexicalEntryUri" : "http://localhost:8080#especiales_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | TelevisionShow_NP)? ", "son ($x | Person_NP)   de ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "82",
    "lexicalEntryUri" : "http://localhost:8080#padre_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos padre de ($x | Person_NP) ", "Dame todos padres de ($x | Person_NP) ", "Dame una lista padre de ($x | Person_NP) ", "Dame una lista padres de ($x | Person_NP) ", "Muéstrame todos padre de ($x | Person_NP) ", "¿Cuáles son padres de ($x | Person_NP)? ", "¿En qué padre esta ($x | Person_NP)? ", "¿Qué padre tiene ($x | Person_NP)? ", "¿Qué series televisivas son padre de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "83",
    "lexicalEntryUri" : "http://localhost:8080#padre_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "84",
    "lexicalEntryUri" : "http://localhost:8080#padre_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/parent> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "85",
    "lexicalEntryUri" : "http://localhost:8080#miembro",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos miembro de ($x | Band_NP) ", "Dame todos miembros de ($x | Band_NP) ", "Dame una lista miembro de ($x | Band_NP) ", "Dame una lista miembros de ($x | Band_NP) ", "Muéstrame todos miembro de ($x | Band_NP) ", "¿Cuáles son miembros de ($x | Band_NP)? ", "¿En qué miembro esta ($x | Band_NP)? ", "¿Qué miembro tiene ($x | Band_NP)? ", "¿Qué series televisivas son miembro de ($x | Band_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "86",
    "lexicalEntryUri" : "http://localhost:8080#miembro",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Band_NP)? ", "son ($x | Person_NP)   de ($x | Band_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "87",
    "lexicalEntryUri" : "http://localhost:8080#miembro",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Band",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Band_NP)? ", "son ($x | Person_NP)   de ($x | Band_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/bandMember> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "88",
    "lexicalEntryUri" : "http://localhost:8080#fundador_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos fundador de ($x | Publisher_NP) ", "Dame una lista fundador de ($x | Publisher_NP) ", "Muéstrame todos fundador de ($x | Publisher_NP) ", "¿Cuáles son fundador de ($x | Publisher_NP)? ", "¿En qué fundador esta ($x | Publisher_NP)? ", "¿Qué fundador tiene ($x | Publisher_NP)? ", "¿Qué series televisivas son fundador de ($x | Publisher_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "89",
    "lexicalEntryUri" : "http://localhost:8080#fundador_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Publisher_NP)? ", "son ($x | Person_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "90",
    "lexicalEntryUri" : "http://localhost:8080#fundador_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Publisher_NP)? ", "son ($x | Person_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/founder> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "91",
    "lexicalEntryUri" : "http://localhost:8080#tocher",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos hija de ($x | Person_NP) ", "Dame todos hijas de ($x | Person_NP) ", "Dame una lista hija de ($x | Person_NP) ", "Dame una lista hijas de ($x | Person_NP) ", "Muéstrame todos hija de ($x | Person_NP) ", "¿Cuáles son hijas de ($x | Person_NP)? ", "¿En qué hija esta ($x | Person_NP)? ", "¿Qué hija tiene ($x | Person_NP)? ", "¿Qué series televisivas son hija de ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "92",
    "lexicalEntryUri" : "http://localhost:8080#tocher",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "93",
    "lexicalEntryUri" : "http://localhost:8080#tocher",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | Person_NP)? ", "son ($x | Person_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/child> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "94",
    "lexicalEntryUri" : "http://localhost:8080#libros_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "WrittenWork",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos libro en ($x | TelevisionShow_NP) ", "Dame todos libros en ($x | TelevisionShow_NP) ", "Dame una lista libro en ($x | TelevisionShow_NP) ", "Dame una lista libros en ($x | TelevisionShow_NP) ", "Muéstrame todos libro en ($x | TelevisionShow_NP) ", "¿Cuál es libro en ($x | TelevisionShow_NP)? ", "¿Cuál fue libro en ($x | TelevisionShow_NP)? ", "¿Cuál fueron libros en ($x | TelevisionShow_NP)? ", "¿Cuál son libros en ($x | TelevisionShow_NP)? ", "¿Cuáles son libros en ($x | TelevisionShow_NP)? ", "¿En qué libro esta ($x | TelevisionShow_NP)? ", "¿Qué feminine son libro en ($x | TelevisionShow_NP)? ", "¿Qué libro tiene ($x | TelevisionShow_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "95",
    "lexicalEntryUri" : "http://localhost:8080#libros_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "WrittenWork",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | WrittenWork_NP)   en ($x | TelevisionShow_NP)? ", "son ($x | WrittenWork_NP)   en ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "96",
    "lexicalEntryUri" : "http://localhost:8080#libros_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "WrittenWork",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | WrittenWork_NP)   en ($x | TelevisionShow_NP)? ", "son ($x | WrittenWork_NP)   en ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/series> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "97",
    "lexicalEntryUri" : "http://localhost:8080#moneda",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos moneda de ($x | Country_NP) ", "Dame todos monedas de ($x | Country_NP) ", "Dame una lista moneda de ($x | Country_NP) ", "Dame una lista monedas de ($x | Country_NP) ", "Muéstrame todos moneda de ($x | Country_NP) ", "¿Cuál es moneda de ($x | Country_NP)? ", "¿Cuál fue moneda de ($x | Country_NP)? ", "¿Cuál fueron monedas de ($x | Country_NP)? ", "¿Cuál son monedas de ($x | Country_NP)? ", "¿Cuáles son monedas de ($x | Country_NP)? ", "¿En qué moneda esta ($x | Country_NP)? ", "¿Qué moneda tiene ($x | Country_NP)? ", "¿Qué pa�ses son moneda de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "98",
    "lexicalEntryUri" : "http://localhost:8080#moneda",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Currency_NP)   de ($x | Country_NP)? ", "son ($x | Currency_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "99",
    "lexicalEntryUri" : "http://localhost:8080#moneda",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Currency",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Currency_NP)   de ($x | Country_NP)? ", "son ($x | Currency_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/currency> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "100",
    "lexicalEntryUri" : "http://localhost:8080#condados_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos condados de ($x | Country_NP) ", "Dame una lista condados de ($x | Country_NP) ", "Muéstrame todos condados de ($x | Country_NP) ", "¿Cuál es condados de ($x | Country_NP)? ", "¿Cuál fue condados de ($x | Country_NP)? ", "¿Cuál fueron condados de ($x | Country_NP)? ", "¿Cuál son condados de ($x | Country_NP)? ", "¿Cuáles son condados de ($x | Country_NP)? ", "¿En qué condados esta ($x | Country_NP)? ", "¿Qué condados tiene ($x | Country_NP)? ", "¿Qué masculine son condados de ($x | Country_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "101",
    "lexicalEntryUri" : "http://localhost:8080#condados_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Country_NP)   de ($x | Country_NP)? ", "son ($x | Country_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "102",
    "lexicalEntryUri" : "http://localhost:8080#condados_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Country",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Country_NP)   de ($x | Country_NP)? ", "son ($x | Country_NP)   de ($x | Country_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/governmentType> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "103",
    "lexicalEntryUri" : "http://localhost:8080#juegos",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos juego de ($x | Publisher_NP) ", "Dame todos juegos de ($x | Publisher_NP) ", "Dame una lista juego de ($x | Publisher_NP) ", "Dame una lista juegos de ($x | Publisher_NP) ", "Muéstrame todos juego de ($x | Publisher_NP) ", "¿Cuál es juego de ($x | Publisher_NP)? ", "¿Cuál fue juego de ($x | Publisher_NP)? ", "¿Cuál fueron juegos de ($x | Publisher_NP)? ", "¿Cuál son juegos de ($x | Publisher_NP)? ", "¿Cuáles son juegos de ($x | Publisher_NP)? ", "¿En qué juego esta ($x | Publisher_NP)? ", "¿Qué juego tiene ($x | Publisher_NP)? ", "¿Qué videojuegos son juego de ($x | Publisher_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "104",
    "lexicalEntryUri" : "http://localhost:8080#juegos",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Publisher_NP)? ", "son ($x | VideoGame_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "105",
    "lexicalEntryUri" : "http://localhost:8080#juegos",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Publisher",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Publisher_NP)? ", "son ($x | VideoGame_NP)   de ($x | Publisher_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "106",
    "lexicalEntryUri" : "http://localhost:8080#lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos lugar de nacimiento de ($x | Person_NP) ", "Dame todos lugares de nacimiento de ($x | Person_NP) ", "Dame una lista lugar de nacimiento de ($x | Person_NP) ", "Dame una lista lugares de nacimiento de ($x | Person_NP) ", "Muéstrame todos lugar de nacimiento de ($x | Person_NP) ", "¿Cuál es lugar de nacimiento de ($x | Person_NP)? ", "¿Cuál fue lugar de nacimiento de ($x | Person_NP)? ", "¿Cuál fueron lugares de nacimiento de ($x | Person_NP)? ", "¿Cuál son lugares de nacimiento de ($x | Person_NP)? ", "¿Cuáles son lugares de nacimiento de ($x | Person_NP)? ", "¿En qué lugar de nacimiento esta ($x | Person_NP)? ", "¿Qué feminine son lugar de nacimiento de ($x | Person_NP)? ", "¿Qué lugar de nacimiento tiene ($x | Person_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "107",
    "lexicalEntryUri" : "http://localhost:8080#lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Place_NP)   de ($x | Person_NP)? ", "son ($x | Place_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "108",
    "lexicalEntryUri" : "http://localhost:8080#lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Place_NP)   de ($x | Person_NP)? ", "son ($x | Place_NP)   de ($x | Person_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "109",
    "lexicalEntryUri" : "http://localhost:8080#poplaci�n_total_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos poblaciones totales de ($x | Location_NP) ", "Dame todos poplaci�n total de ($x | Location_NP) ", "Dame una lista poblaciones totales de ($x | Location_NP) ", "Dame una lista poplaci�n total de ($x | Location_NP) ", "Muéstrame todos poplaci�n total de ($x | Location_NP) ", "¿Cuál es poplaci�n total de ($x | Location_NP)? ", "¿Cuál fue poplaci�n total de ($x | Location_NP)? ", "¿Cuál fueron poblaciones totales de ($x | Location_NP)? ", "¿Cuál son poblaciones totales de ($x | Location_NP)? ", "¿Cuáles son poblaciones totales de ($x | Location_NP)? ", "¿En qué poplaci�n total esta ($x | Location_NP)? ", "¿Qué poplaci�n total tiene ($x | Location_NP)? ", "¿Qué ubicaciones son poplaci�n total de ($x | Location_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "110",
    "lexicalEntryUri" : "http://localhost:8080#poplaci�n_total_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Number_NP)   de ($x | Location_NP)? ", "son ($x | Number_NP)   de ($x | Location_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "111",
    "lexicalEntryUri" : "http://localhost:8080#poplaci�n_total_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Number",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Number_NP)   de ($x | Location_NP)? ", "son ($x | Number_NP)   de ($x | Location_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "112",
    "lexicalEntryUri" : "http://localhost:8080#anfitri�n_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos anfitri�n de ($x | TelevisionShow_NP) ", "Dame una lista anfitri�n de ($x | TelevisionShow_NP) ", "Muéstrame todos anfitri�n de ($x | TelevisionShow_NP) ", "¿Cuáles son anfitri�n de ($x | TelevisionShow_NP)? ", "¿En qué anfitri�n esta ($x | TelevisionShow_NP)? ", "¿Qué anfitri�n tiene ($x | TelevisionShow_NP)? ", "¿Qué series televisivas son anfitri�n de ($x | TelevisionShow_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "113",
    "lexicalEntryUri" : "http://localhost:8080#anfitri�n_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | TelevisionShow_NP)? ", "son ($x | Person_NP)   de ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "114",
    "lexicalEntryUri" : "http://localhost:8080#anfitri�n_de",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | Person_NP)   de ($x | TelevisionShow_NP)? ", "son ($x | Person_NP)   de ($x | TelevisionShow_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "115",
    "lexicalEntryUri" : "http://localhost:8080#desarrollo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos desarrolladores de ($x | Software_NP) ", "Dame todos desarrollo de ($x | Software_NP) ", "Dame una lista desarrolladores de ($x | Software_NP) ", "Dame una lista desarrollo de ($x | Software_NP) ", "Muéstrame todos desarrollo de ($x | Software_NP) ", "¿Cuáles son desarrolladores de ($x | Software_NP)? ", "¿En qué desarrollo esta ($x | Software_NP)? ", "¿Qué desarrollo tiene ($x | Software_NP)? ", "¿Qué software son desarrollo de ($x | Software_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "116",
    "lexicalEntryUri" : "http://localhost:8080#desarrollo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | University_NP)   de ($x | Software_NP)? ", "son ($x | University_NP)   de ($x | Software_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "117",
    "lexicalEntryUri" : "http://localhost:8080#desarrollo",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "University",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | University_NP)   de ($x | Software_NP)? ", "son ($x | University_NP)   de ($x | Software_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "118",
    "lexicalEntryUri" : "http://localhost:8080#videojuego",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "Dame todos videojuego de ($x | Company_NP) ", "Dame todos videojuegos de ($x | Company_NP) ", "Dame una lista videojuego de ($x | Company_NP) ", "Dame una lista videojuegos de ($x | Company_NP) ", "Muéstrame todos videojuego de ($x | Company_NP) ", "¿Cuál es videojuego de ($x | Company_NP)? ", "¿Cuál fue videojuego de ($x | Company_NP)? ", "¿Cuál fueron videojuegos de ($x | Company_NP)? ", "¿Cuál son videojuegos de ($x | Company_NP)? ", "¿Cuáles son videojuegos de ($x | Company_NP)? ", "¿En qué videojuego esta ($x | Company_NP)? ", "¿Qué videojuego tiene ($x | Company_NP)? ", "¿Qué videojuegos son videojuego de ($x | Company_NP)? " ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "119",
    "lexicalEntryUri" : "http://localhost:8080#videojuego",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Company_NP)? ", "son ($x | VideoGame_NP)   de ($x | Company_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "120",
    "lexicalEntryUri" : "http://localhost:8080#videojuego",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "VideoGame",
    "frameType" : "NPP",
    "sentenceTemplate" : null,
    "sentences" : [ "es ($x | VideoGame_NP)   de ($x | Company_NP)? ", "son ($x | VideoGame_NP)   de ($x | Company_NP)? " ],
    "queryType" : "ASK",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "121",
    "lexicalEntryUri" : "http://localhost:8080#to_ganar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Scientist",
    "returnType" : "Award",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos ganar qué hayan ganar ($x | Scientist_NP)", "¿Cuál ganar ($x | Scientist_NP)?", "¿Cuál gan� ($x | Scientist_NP)?", "¿En qué premio gan� ($x | Scientist_NP)?", "¿En qué premios ganar ($x | Scientist_NP)?", "¿Por qué premio gan� ($x | Scientist_NP)?", "¿Por qué premios ganar ($x | Scientist_NP)?", "¿Qué ganar ($x | Scientist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "122",
    "lexicalEntryUri" : "http://localhost:8080#to_ganar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos cient�fico ganado por ($x | Award_NP)", "¿En qué cient�fico gan� ($x | Award_NP)?", "¿Qué cient�fico gan� ($x | Award_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "123",
    "lexicalEntryUri" : "http://localhost:8080#to_ganar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado gan� ($x | Award_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "124",
    "lexicalEntryUri" : "http://localhost:8080#to_Casarse_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos casarse qué hayan casarse ($x | Person_NP)", "XX XX Casado ($x | Person_NP)?", "XX casarse ($x | Person_NP)?", "XX fue series televisivas que casa ($x | Person_NP)?", "¿En qué feminine casarse ($x | Person_NP)?", "¿En qué series televisivas casa ($x | Person_NP)?", "¿Por qué feminine casarse ($x | Person_NP)?", "¿Por qué series televisivas casa ($x | Person_NP)?", "¿Quién casa ($x | Person_NP)?", "¿Quién casarse ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "125",
    "lexicalEntryUri" : "http://localhost:8080#to_Casarse_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es casa ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "126",
    "lexicalEntryUri" : "http://localhost:8080#to_Casarse_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado casa ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "127",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos desarrollar qué hayan desarrollar ($x | Software_NP)", "XX desarrollar ($x | Software_NP)?", "XX desarroll� ($x | Software_NP)?", "¿En qué masculine desarroll� ($x | Software_NP)?", "¿En qué software desarrollar ($x | Software_NP)?", "¿Por qué masculine desarroll� ($x | Software_NP)?", "¿Por qué software desarrollar ($x | Software_NP)?", "¿Qué desarrollar ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "128",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos videojuegos desarrollado por ($x | Company_NP)", "¿En qué videojuegos desarroll� ($x | Company_NP)?", "¿Qué videojuegos desarroll� ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "129",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Software",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado desarroll� ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "130",
    "lexicalEntryUri" : "http://localhost:8080#to_publicar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos publicar qué hayan publicar ($x | Book_NP)", "XX publicar ($x | Book_NP)?", "XX public� ($x | Book_NP)?", "¿En qué compa�ia public� ($x | Book_NP)?", "¿En qué compa�ias publicar ($x | Book_NP)?", "¿Por qué compa�ia public� ($x | Book_NP)?", "¿Por qué compa�ias publicar ($x | Book_NP)?", "¿Qué publicar ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "131",
    "lexicalEntryUri" : "http://localhost:8080#to_publicar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos persona publicado por ($x | Agent_NP)", "¿En qué persona public� ($x | Agent_NP)?", "¿Qué persona public� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "132",
    "lexicalEntryUri" : "http://localhost:8080#to_publicar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado public� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "133",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Website",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | Website_NP)", "XX dise�ar ($x | Website_NP)?", "XX dise�� ($x | Website_NP)?", "¿En qué feminine dise�ar ($x | Website_NP)?", "¿En qué series televisivas dise�� ($x | Website_NP)?", "¿Por qué feminine dise�ar ($x | Website_NP)?", "¿Por qué series televisivas dise�� ($x | Website_NP)?", "¿Qué dise�ar ($x | Website_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "134",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos sitio web dise�ado por ($x | Person_NP)", "¿En qué sitio web dise�� ($x | Person_NP)?", "¿Qué sitio web dise�� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "135",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado dise�� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "136",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | Bridge_NP)", "XX dise�ar ($x | Bridge_NP)?", "XX dise�� ($x | Bridge_NP)?", "¿En qué feminine dise�ar ($x | Bridge_NP)?", "¿En qué series televisivas dise�� ($x | Bridge_NP)?", "¿Por qué feminine dise�ar ($x | Bridge_NP)?", "¿Por qué series televisivas dise�� ($x | Bridge_NP)?", "¿Qué dise�ar ($x | Bridge_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "137",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos puente dise�ado por ($x | Person_NP)", "¿En qué puente dise�� ($x | Person_NP)?", "¿Qué puente dise�� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "138",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado dise�� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "139",
    "lexicalEntryUri" : "http://localhost:8080#to_moderar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos moderar qué hayan moderar ($x | TelevisionShow_NP)", "XX moderar ($x | TelevisionShow_NP)?", "XX moder� ($x | TelevisionShow_NP)?", "¿En qué feminine moderar ($x | TelevisionShow_NP)?", "¿En qué series televisivas moder� ($x | TelevisionShow_NP)?", "¿Por qué feminine moderar ($x | TelevisionShow_NP)?", "¿Por qué series televisivas moder� ($x | TelevisionShow_NP)?", "¿Qué moderar ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "140",
    "lexicalEntryUri" : "http://localhost:8080#to_moderar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine moderado por ($x | Person_NP)", "¿En qué feminine moder� ($x | Person_NP)?", "¿Qué feminine moder� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "141",
    "lexicalEntryUri" : "http://localhost:8080#to_moderar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado moder� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "142",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos inspirar qué hayan inspirar ($x | Artist_NP)", "XX XX inspirado ($x | Artist_NP)?", "XX fue artista que inspir� ($x | Artist_NP)?", "XX inspirar ($x | Artist_NP)?", "¿En qué artista inspir� ($x | Artist_NP)?", "¿En qué artistas inspirar ($x | Artist_NP)?", "¿Por qué artista inspir� ($x | Artist_NP)?", "¿Por qué artistas inspirar ($x | Artist_NP)?", "¿Quién inspirar ($x | Artist_NP)?", "¿Quién inspir� ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "143",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es inspir� ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "144",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado inspir� ($x | Artist_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "145",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos crear qué hayan crear ($x | TelevisionShow_NP)", "XX crear ($x | TelevisionShow_NP)?", "XX cre� ($x | TelevisionShow_NP)?", "¿En qué compa�ia cre� ($x | TelevisionShow_NP)?", "¿En qué compa�ias crear ($x | TelevisionShow_NP)?", "¿Por qué compa�ia cre� ($x | TelevisionShow_NP)?", "¿Por qué compa�ias crear ($x | TelevisionShow_NP)?", "¿Qué crear ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "146",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine creado por ($x | Agent_NP)", "¿En qué feminine cre� ($x | Agent_NP)?", "¿Qué feminine cre� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "147",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado cre� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "148",
    "lexicalEntryUri" : "http://localhost:8080#to_cruzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Bridge",
    "returnType" : "River",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos cruzar qué hayan cruzar ($x | Bridge_NP)", "¿Cuál cruzar ($x | Bridge_NP)?", "¿Cuál cruz� ($x | Bridge_NP)?", "¿En qué r�o cruz� ($x | Bridge_NP)?", "¿En qué r�os cruzar ($x | Bridge_NP)?", "¿Por qué r�o cruz� ($x | Bridge_NP)?", "¿Por qué r�os cruzar ($x | Bridge_NP)?", "¿Qué cruzar ($x | Bridge_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "149",
    "lexicalEntryUri" : "http://localhost:8080#to_cruzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos puente cruzado por ($x | River_NP)", "¿En qué puente cruz� ($x | River_NP)?", "¿Qué puente cruz� ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "150",
    "lexicalEntryUri" : "http://localhost:8080#to_cruzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado cruz� ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "151",
    "lexicalEntryUri" : "http://localhost:8080#to_compuso",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos compuso la banda sonora qué hayan compuso la banda sonora ($x | Film_NP)", "XX compuso la banda sonora ($x | Film_NP)?", "¿En qué feminine compuso la banda sonora ($x | Film_NP)?", "¿En qué series televisivas compuso la banda sonora ($x | Film_NP)?", "¿Por qué feminine compuso la banda sonora ($x | Film_NP)?", "¿Por qué series televisivas compuso la banda sonora ($x | Film_NP)?", "¿Qué compuso la banda sonora ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "152",
    "lexicalEntryUri" : "http://localhost:8080#to_compuso",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pel�cula compuso la banda sonora von ($x | Person_NP)", "¿En qué pel�cula compuso la banda sonora ($x | Person_NP)?", "¿Qué pel�cula compuso la banda sonora ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "153",
    "lexicalEntryUri" : "http://localhost:8080#to_compuso",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado compuso la banda sonora ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "154",
    "lexicalEntryUri" : "http://localhost:8080#to_cuesta",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Number",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ "¿Cuanto costar ($x | Film_NP)?", "¿Cuanto cost� ($x | Film_NP)?", "¿Cuanto cuesta ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "155",
    "lexicalEntryUri" : "http://localhost:8080#to_cuesta",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "156",
    "lexicalEntryUri" : "http://localhost:8080#to_cuesta",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado cost� ($x | Number_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "157",
    "lexicalEntryUri" : "http://localhost:8080#to_Casarse_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos casarse con qué hayan casarse con ($x | Person_NP)", "XX XX Casado con ($x | Person_NP)?", "XX casarse con ($x | Person_NP)?", "XX fue series televisivas que casa con ($x | Person_NP)?", "¿En qué feminine casarse con ($x | Person_NP)?", "¿En qué series televisivas casa con ($x | Person_NP)?", "¿Por qué feminine casarse con ($x | Person_NP)?", "¿Por qué series televisivas casa con ($x | Person_NP)?", "¿Quién casa con ($x | Person_NP)?", "¿Quién casarse con ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "158",
    "lexicalEntryUri" : "http://localhost:8080#to_Casarse_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es casa con ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "159",
    "lexicalEntryUri" : "http://localhost:8080#to_Casarse_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado casa con ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "160",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos actuar qué hayan actuar ($x | FictionalCharacter_NP)", "XX XX actuado ($x | FictionalCharacter_NP)?", "XX actuar ($x | FictionalCharacter_NP)?", "XX fue series televisivas que act�o ($x | FictionalCharacter_NP)?", "¿En qué feminine actuar ($x | FictionalCharacter_NP)?", "¿En qué series televisivas act�o ($x | FictionalCharacter_NP)?", "¿Por qué feminine actuar ($x | FictionalCharacter_NP)?", "¿Por qué series televisivas act�o ($x | FictionalCharacter_NP)?", "¿Quién actuar ($x | FictionalCharacter_NP)?", "¿Quién act�o ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "161",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es act�o ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "162",
    "lexicalEntryUri" : "http://localhost:8080#to_Play_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado act�o ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "163",
    "lexicalEntryUri" : "http://localhost:8080#to_actuado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos actuado qué hayan actuado ($x | Film_NP)", "XX actuado ($x | Film_NP)?", "¿En qué feminine actuado ($x | Film_NP)?", "¿En qué series televisivas actuado ($x | Film_NP)?", "¿Por qué feminine actuado ($x | Film_NP)?", "¿Por qué series televisivas actuado ($x | Film_NP)?", "¿Qué actuado ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "164",
    "lexicalEntryUri" : "http://localhost:8080#to_actuado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pel�cula actuado por ($x | Person_NP)", "¿En qué pel�cula actuado ($x | Person_NP)?", "¿Qué pel�cula actuado ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "165",
    "lexicalEntryUri" : "http://localhost:8080#to_actuado",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado actuado ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "166",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos interpreto qué hayan interpreto ($x | FictionalCharacter_NP)", "XX XX interpreto ($x | FictionalCharacter_NP)?", "XX fue series televisivas que interpreto ($x | FictionalCharacter_NP)?", "XX interpreto ($x | FictionalCharacter_NP)?", "¿En qué feminine interpreto ($x | FictionalCharacter_NP)?", "¿En qué series televisivas interpreto ($x | FictionalCharacter_NP)?", "¿Por qué feminine interpreto ($x | FictionalCharacter_NP)?", "¿Por qué series televisivas interpreto ($x | FictionalCharacter_NP)?", "¿Quién interpreto ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "167",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es interpreto ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "168",
    "lexicalEntryUri" : "http://localhost:8080#to_play_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado interpreto ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "169",
    "lexicalEntryUri" : "http://localhost:8080#to_dirigir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Film",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dirigir qué hayan dirigir ($x | Film_NP)", "XX dirigir ($x | Film_NP)?", "XX dirigi� ($x | Film_NP)?", "¿En qué feminine dirigir ($x | Film_NP)?", "¿En qué series televisivas dirigi� ($x | Film_NP)?", "¿Por qué feminine dirigir ($x | Film_NP)?", "¿Por qué series televisivas dirigi� ($x | Film_NP)?", "¿Qué dirigir ($x | Film_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "170",
    "lexicalEntryUri" : "http://localhost:8080#to_dirigir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pel�cula dirigido por ($x | Person_NP)", "¿En qué pel�cula dirigi� ($x | Person_NP)?", "¿Qué pel�cula dirigi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "171",
    "lexicalEntryUri" : "http://localhost:8080#to_dirigir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado dirigi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "172",
    "lexicalEntryUri" : "http://localhost:8080#to_contiene",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Food",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos contiene qué hayan contiene ($x | THING_NP)", "¿Cuál contiene ($x | THING_NP)?", "¿En qué   contiene ($x | THING_NP)?", "¿Por qué   contiene ($x | THING_NP)?", "¿Qué contiene ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "173",
    "lexicalEntryUri" : "http://localhost:8080#to_contiene",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos masculine contiene por ($x | Food_NP)", "¿En qué masculine contiene ($x | Food_NP)?", "¿Qué masculine contiene ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "174",
    "lexicalEntryUri" : "http://localhost:8080#to_contiene",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado contiene ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "175",
    "lexicalEntryUri" : "http://localhost:8080#to_influenciar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos influenciar qué hayan influenciar ($x | Person_NP)", "XX XX influenciado ($x | Person_NP)?", "XX fue series televisivas que influenci� ($x | Person_NP)?", "XX influenciar ($x | Person_NP)?", "¿En qué feminine influenciar ($x | Person_NP)?", "¿En qué series televisivas influenci� ($x | Person_NP)?", "¿Por qué feminine influenciar ($x | Person_NP)?", "¿Por qué series televisivas influenci� ($x | Person_NP)?", "¿Quién influenciar ($x | Person_NP)?", "¿Quién influenci� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "176",
    "lexicalEntryUri" : "http://localhost:8080#to_influenciar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es influenci� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "177",
    "lexicalEntryUri" : "http://localhost:8080#to_influenciar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado influenci� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "178",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos ide� qué hayan ide� ($x | TelevisionShow_NP)", "XX ide� ($x | TelevisionShow_NP)?", "¿En qué feminine ide� ($x | TelevisionShow_NP)?", "¿En qué series televisivas ide� ($x | TelevisionShow_NP)?", "¿Por qué feminine ide� ($x | TelevisionShow_NP)?", "¿Por qué series televisivas ide� ($x | TelevisionShow_NP)?", "¿Qué ide� ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "179",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine ide� por ($x | Person_NP)", "¿En qué feminine ide� ($x | Person_NP)?", "¿Qué feminine ide� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "180",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado ide� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "181",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos escribir qué hayan escribir ($x | TelevisionShow_NP)", "XX escribir ($x | TelevisionShow_NP)?", "XX escribi� ($x | TelevisionShow_NP)?", "¿En qué feminine escribir ($x | TelevisionShow_NP)?", "¿En qué series televisivas escribi� ($x | TelevisionShow_NP)?", "¿Por qué feminine escribir ($x | TelevisionShow_NP)?", "¿Por qué series televisivas escribi� ($x | TelevisionShow_NP)?", "¿Qué escribir ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "182",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine escrito por ($x | Person_NP)", "¿En qué feminine escribi� ($x | Person_NP)?", "¿Qué feminine escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "183",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "184",
    "lexicalEntryUri" : "http://localhost:8080#to_fundar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Pope",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos fundar qué hayan fundar ($x | Agent_NP)", "XX XX fundado ($x | Agent_NP)?", "XX fue Papa que fund� ($x | Agent_NP)?", "XX fundar ($x | Agent_NP)?", "¿En qué Papa fund� ($x | Agent_NP)?", "¿En qué Papas fundar ($x | Agent_NP)?", "¿Por qué Papa fund� ($x | Agent_NP)?", "¿Por qué Papas fundar ($x | Agent_NP)?", "¿Quién fundar ($x | Agent_NP)?", "¿Quién fund� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "185",
    "lexicalEntryUri" : "http://localhost:8080#to_fundar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es fund� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "186",
    "lexicalEntryUri" : "http://localhost:8080#to_fundar_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado fund� ($x | Pope_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "187",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Colour",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos expresar qué hayan expresar ($x | Colour_NP)", "¿Cuál expresar ($x | Colour_NP)?", "¿Cuál expres� ($x | Colour_NP)?", "¿En qué   expresar ($x | Colour_NP)?", "¿En qué   expres� ($x | Colour_NP)?", "¿Por qué   expresar ($x | Colour_NP)?", "¿Por qué   expres� ($x | Colour_NP)?", "¿Qué expresar ($x | Colour_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "188",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos color expresado por ($x | THING_NP)", "¿En qué color expres� ($x | THING_NP)?", "¿Qué color expres� ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "189",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado expres� ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "190",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Colour",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos expresar qué hayan expresar ($x | Colour_NP)", "¿Cuál expresar ($x | Colour_NP)?", "¿Cuál expres� ($x | Colour_NP)?", "¿En qué   expresar ($x | Colour_NP)?", "¿En qué   expres� ($x | Colour_NP)?", "¿Por qué   expresar ($x | Colour_NP)?", "¿Por qué   expres� ($x | Colour_NP)?", "¿Qué expresar ($x | Colour_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "191",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos color expresado por ($x | THING_NP)", "¿En qué color expres� ($x | THING_NP)?", "¿Qué color expres� ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "192",
    "lexicalEntryUri" : "http://localhost:8080#to_expresar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado expres� ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "193",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Planet",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos descubrir qué hayan descubrir ($x | Planet_NP)", "XX descubrir ($x | Planet_NP)?", "XX descubri� ($x | Planet_NP)?", "¿En qué feminine descubrir ($x | Planet_NP)?", "¿En qué series televisivas descubri� ($x | Planet_NP)?", "¿Por qué feminine descubrir ($x | Planet_NP)?", "¿Por qué series televisivas descubri� ($x | Planet_NP)?", "¿Qué descubrir ($x | Planet_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "194",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos planeta descubierto por ($x | Person_NP)", "¿En qué planeta descubri� ($x | Person_NP)?", "¿Qué planeta descubri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "195",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Planet",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado descubri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "196",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "CelestialBody",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos descubrir qué hayan descubrir ($x | CelestialBody_NP)", "XX descubrir ($x | CelestialBody_NP)?", "XX descubri� ($x | CelestialBody_NP)?", "¿En qué feminine descubrir ($x | CelestialBody_NP)?", "¿En qué series televisivas descubri� ($x | CelestialBody_NP)?", "¿Por qué feminine descubrir ($x | CelestialBody_NP)?", "¿Por qué series televisivas descubri� ($x | CelestialBody_NP)?", "¿Qué descubrir ($x | CelestialBody_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "197",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos cuerpo celeste descubierto por ($x | Person_NP)", "¿En qué cuerpo celeste descubri� ($x | Person_NP)?", "¿Qué cuerpo celeste descubri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "198",
    "lexicalEntryUri" : "http://localhost:8080#to_descubrir",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado descubri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "199",
    "lexicalEntryUri" : "http://localhost:8080#to_producen",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "Company",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos producen qué hayan producen ($x | Ship_NP)", "XX producen ($x | Ship_NP)?", "¿En qué barco producen ($x | Ship_NP)?", "¿En qué barcos producen ($x | Ship_NP)?", "¿Por qué barco producen ($x | Ship_NP)?", "¿Por qué barcos producen ($x | Ship_NP)?", "¿Qué producen ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "200",
    "lexicalEntryUri" : "http://localhost:8080#to_producen",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Ship",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos videojuegos desarrollado por ($x | Company_NP)", "¿En qué videojuegos producen ($x | Company_NP)?", "¿Qué videojuegos producen ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "201",
    "lexicalEntryUri" : "http://localhost:8080#to_producen",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "Ship",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado producen ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "202",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "ArchitecturalStructure",
    "returnType" : "Architect",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | ArchitecturalStructure_NP)", "XX dise�ar ($x | ArchitecturalStructure_NP)?", "XX dise�� ($x | ArchitecturalStructure_NP)?", "¿En qué arquitecto dise�� ($x | ArchitecturalStructure_NP)?", "¿En qué arquitectos dise�ar ($x | ArchitecturalStructure_NP)?", "¿Por qué arquitecto dise�� ($x | ArchitecturalStructure_NP)?", "¿Por qué arquitectos dise�ar ($x | ArchitecturalStructure_NP)?", "¿Qué dise�ar ($x | ArchitecturalStructure_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "203",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos estructura arquitect�nica dise�ado por ($x | Architect_NP)", "¿En qué estructura arquitect�nica dise�� ($x | Architect_NP)?", "¿Qué estructura arquitect�nica dise�� ($x | Architect_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "204",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado dise�� ($x | Architect_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "205",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "LaunchPad",
    "returnType" : "Organisation",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos operar qué hayan operar ($x | LaunchPad_NP)", "XX operar ($x | LaunchPad_NP)?", "XX oper� ($x | LaunchPad_NP)?", "¿En qué organizaciones operar ($x | LaunchPad_NP)?", "¿En qué organizaci�n oper� ($x | LaunchPad_NP)?", "¿Por qué organizaciones operar ($x | LaunchPad_NP)?", "¿Por qué organizaci�n oper� ($x | LaunchPad_NP)?", "¿Qué operar ($x | LaunchPad_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "206",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos plataforma de lanzamiento operado por ($x | Organisation_NP)", "¿En qué plataforma de lanzamiento oper� ($x | Organisation_NP)?", "¿Qué plataforma de lanzamiento oper� ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "207",
    "lexicalEntryUri" : "http://localhost:8080#to_operate_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado oper� ($x | Organisation_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "208",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "VideoGame",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos desarrollar qué hayan desarrollar ($x | VideoGame_NP)", "XX desarrollar ($x | VideoGame_NP)?", "XX desarroll� ($x | VideoGame_NP)?", "¿En qué compa�ia desarroll� ($x | VideoGame_NP)?", "¿En qué compa�ias desarrollar ($x | VideoGame_NP)?", "¿Por qué compa�ia desarroll� ($x | VideoGame_NP)?", "¿Por qué compa�ias desarrollar ($x | VideoGame_NP)?", "¿Qué desarrollar ($x | VideoGame_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "209",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos masculine desarrollado por ($x | Agent_NP)", "¿En qué masculine desarroll� ($x | Agent_NP)?", "¿Qué masculine desarroll� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "210",
    "lexicalEntryUri" : "http://localhost:8080#to_desarrollar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado desarroll� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "211",
    "lexicalEntryUri" : "http://localhost:8080#to_primero_en_ascender_al",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "THING",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos primero en ascender al qué hayan primero en ascender al ($x | Mountain_NP)", "¿Cuál primero en ascender al ($x | Mountain_NP)?", "¿Cuál primero en asendi� al ($x | Mountain_NP)?", "¿En qué persona primero en asendi� al ($x | Mountain_NP)?", "¿En qué personas primero en ascender al ($x | Mountain_NP)?", "¿Por qué persona primero en asendi� al ($x | Mountain_NP)?", "¿Por qué personas primero en ascender al ($x | Mountain_NP)?", "¿Qué primero en ascender al ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "212",
    "lexicalEntryUri" : "http://localhost:8080#to_primero_en_ascender_al",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos monta�as primero en ascendido al por ($x | THING_NP)", "¿En qué monta�as primero en asendi� al ($x | THING_NP)?", "¿Qué monta�as primero en asendi� al ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "213",
    "lexicalEntryUri" : "http://localhost:8080#to_primero_en_ascender_al",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Mountain",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado primero en asendi� al ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "214",
    "lexicalEntryUri" : "http://localhost:8080#to_participate_in_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "MilitaryConflict",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos participar qué hayan participar ($x | Person_NP)", "¿Cuál participar ($x | Person_NP)?", "¿Cuál particip� ($x | Person_NP)?", "¿En qué conflicto militar particip� ($x | Person_NP)?", "¿En qué conflictos militares participar ($x | Person_NP)?", "¿Por qué conflicto militar particip� ($x | Person_NP)?", "¿Por qué conflictos militares participar ($x | Person_NP)?", "¿Qué participar ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "215",
    "lexicalEntryUri" : "http://localhost:8080#to_participate_in_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos series televisivas participado por ($x | MilitaryConflict_NP)", "¿En qué series televisivas particip� ($x | MilitaryConflict_NP)?", "¿Qué series televisivas particip� ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "216",
    "lexicalEntryUri" : "http://localhost:8080#to_participate_in_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado particip� ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "217",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Book",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos escribir qué hayan escribir ($x | Book_NP)", "XX escribir ($x | Book_NP)?", "XX escribi� ($x | Book_NP)?", "¿En qué feminine escribir ($x | Book_NP)?", "¿En qué series televisivas escribi� ($x | Book_NP)?", "¿Por qué feminine escribir ($x | Book_NP)?", "¿Por qué series televisivas escribi� ($x | Book_NP)?", "¿Qué escribir ($x | Book_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "218",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos persona escrito por ($x | Person_NP)", "¿En qué persona escribi� ($x | Person_NP)?", "¿Qué persona escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "219",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "220",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pintar qué hayan pintar ($x | Work_NP)", "XX pintar ($x | Work_NP)?", "XX pint� ($x | Work_NP)?", "¿En qué feminine pintar ($x | Work_NP)?", "¿En qué series televisivas pint� ($x | Work_NP)?", "¿Por qué feminine pintar ($x | Work_NP)?", "¿Por qué series televisivas pint� ($x | Work_NP)?", "¿Qué pintar ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "221",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos trabajo pintado por ($x | Person_NP)", "¿En qué trabajo pint� ($x | Person_NP)?", "¿Qué trabajo pint� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "222",
    "lexicalEntryUri" : "http://localhost:8080#to_paint",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado pint� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "223",
    "lexicalEntryUri" : "http://localhost:8080#to_actu�",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "FictionalCharacter",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos actu� como qué hayan actu� como ($x | FictionalCharacter_NP)", "XX XX actu� como ($x | FictionalCharacter_NP)?", "XX actu� como ($x | FictionalCharacter_NP)?", "XX fue series televisivas que actu� como ($x | FictionalCharacter_NP)?", "¿En qué feminine actu� como ($x | FictionalCharacter_NP)?", "¿En qué series televisivas actu� como ($x | FictionalCharacter_NP)?", "¿Por qué feminine actu� como ($x | FictionalCharacter_NP)?", "¿Por qué series televisivas actu� como ($x | FictionalCharacter_NP)?", "¿Quién actu� como ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "224",
    "lexicalEntryUri" : "http://localhost:8080#to_actu�",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es actu� como ($x | FictionalCharacter_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "225",
    "lexicalEntryUri" : "http://localhost:8080#to_actu�",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado actu� como ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "226",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "Dame todos inspirar qué hayan inspirar ($x | Person_NP)", "XX XX inspirado ($x | Person_NP)?", "XX fue series televisivas que inspir� ($x | Person_NP)?", "XX inspirar ($x | Person_NP)?", "¿En qué feminine inspirar ($x | Person_NP)?", "¿En qué series televisivas inspir� ($x | Person_NP)?", "¿Por qué feminine inspirar ($x | Person_NP)?", "¿Por qué series televisivas inspir� ($x | Person_NP)?", "¿Quién inspirar ($x | Person_NP)?", "¿Quién inspir� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "227",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_PERSON",
    "sentences" : [ "¿Con quien es inspir� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "228",
    "lexicalEntryUri" : "http://localhost:8080#to_inspirar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado inspir� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "229",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Song",
    "returnType" : "Person",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos escribir qué hayan escribir ($x | Song_NP)", "XX escribir ($x | Song_NP)?", "XX escribi� ($x | Song_NP)?", "¿En qué feminine escribir ($x | Song_NP)?", "¿En qué series televisivas escribi� ($x | Song_NP)?", "¿Por qué feminine escribir ($x | Song_NP)?", "¿Por qué series televisivas escribi� ($x | Song_NP)?", "¿Qué escribir ($x | Song_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "230",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos canci�n escrito por ($x | Person_NP)", "¿En qué canci�n escribi� ($x | Person_NP)?", "¿Qué canci�n escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "231",
    "lexicalEntryUri" : "http://localhost:8080#to_escribir_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado escribi� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "232",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artwork",
    "returnType" : "Museum",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos exhibit qué hayan exhibit ($x | Artwork_NP)", "¿Cuál exhibit ($x | Artwork_NP)?", "¿Cuál exhibi� ($x | Artwork_NP)?", "¿En qué museo exhibi� ($x | Artwork_NP)?", "¿En qué museos exhibit ($x | Artwork_NP)?", "¿Por qué museo exhibi� ($x | Artwork_NP)?", "¿Por qué museos exhibit ($x | Artwork_NP)?", "¿Qué exhibit ($x | Artwork_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "233",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos obra de arte exhibido por ($x | Museum_NP)", "¿En qué obra de arte exhibi� ($x | Museum_NP)?", "¿Qué obra de arte exhibi� ($x | Museum_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "234",
    "lexicalEntryUri" : "http://localhost:8080#to_exhibit",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado exhibi� ($x | Museum_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "235",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Website",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos crear qué hayan crear ($x | Website_NP)", "XX crear ($x | Website_NP)?", "XX cre� ($x | Website_NP)?", "¿En qué compa�ia cre� ($x | Website_NP)?", "¿En qué compa�ias crear ($x | Website_NP)?", "¿Por qué compa�ia cre� ($x | Website_NP)?", "¿Por qué compa�ias crear ($x | Website_NP)?", "¿Qué crear ($x | Website_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "236",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos sitio web creado por ($x | Agent_NP)", "¿En qué sitio web cre� ($x | Agent_NP)?", "¿Qué sitio web cre� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "237",
    "lexicalEntryUri" : "http://localhost:8080#to_crear_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado cre� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "238",
    "lexicalEntryUri" : "http://localhost:8080#to_hablar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Country",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos hablar qué hayan hablar ($x | Language_NP)", "¿Cuál hablar ($x | Language_NP)?", "¿Cuál habl� ($x | Language_NP)?", "¿En qué masculine habl� ($x | Language_NP)?", "¿En qué pa�s hablar ($x | Language_NP)?", "¿Por qué masculine habl� ($x | Language_NP)?", "¿Por qué pa�s hablar ($x | Language_NP)?", "¿Qué hablar ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "239",
    "lexicalEntryUri" : "http://localhost:8080#to_hablar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos pa�ses hablado por ($x | Country_NP)", "¿En qué pa�ses habl� ($x | Country_NP)?", "¿Qué pa�ses habl� ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "240",
    "lexicalEntryUri" : "http://localhost:8080#to_hablar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado habl� ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "241",
    "lexicalEntryUri" : "http://localhost:8080#to_atender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airline",
    "returnType" : "Airport",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos atender qué hayan atender ($x | Airline_NP)", "¿Cuál atender ($x | Airline_NP)?", "¿Cuál atendi� ($x | Airline_NP)?", "¿En qué aeropuerto atendi� ($x | Airline_NP)?", "¿En qué aeropuertos atender ($x | Airline_NP)?", "¿Por qué aeropuerto atendi� ($x | Airline_NP)?", "¿Por qué aeropuertos atender ($x | Airline_NP)?", "¿Qué atender ($x | Airline_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "242",
    "lexicalEntryUri" : "http://localhost:8080#to_atender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos aerol�nea atendido por ($x | Airport_NP)", "¿En qué aerol�nea atendi� ($x | Airport_NP)?", "¿Qué aerol�nea atendi� ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "243",
    "lexicalEntryUri" : "http://localhost:8080#to_atender",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado atendi� ($x | Airport_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "244",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "TelevisionShow",
    "returnType" : "Agent",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos dise�ar qué hayan dise�ar ($x | TelevisionShow_NP)", "XX dise�ar ($x | TelevisionShow_NP)?", "XX dise�� ($x | TelevisionShow_NP)?", "¿En qué compa�ia dise�� ($x | TelevisionShow_NP)?", "¿En qué compa�ias dise�ar ($x | TelevisionShow_NP)?", "¿Por qué compa�ia dise�� ($x | TelevisionShow_NP)?", "¿Por qué compa�ias dise�ar ($x | TelevisionShow_NP)?", "¿Qué dise�ar ($x | TelevisionShow_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "245",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ "Dame todos feminine dise�ado por ($x | Agent_NP)", "¿En qué feminine dise�� ($x | Agent_NP)?", "¿Qué feminine dise�� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "246",
    "lexicalEntryUri" : "http://localhost:8080#to_dise�ar_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "VP",
    "sentenceTemplate" : "HOW_MANY_THING",
    "sentences" : [ "¿Cuántas veces ha estado dise�� ($x | Agent_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "247",
    "lexicalEntryUri" : "http://localhost:8080#influenciared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "248",
    "lexicalEntryUri" : "http://localhost:8080#influenciared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influencedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "249",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_3ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "250",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_3ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "251",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "252",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "253",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "254",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Artist",
    "returnType" : "Artist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "255",
    "lexicalEntryUri" : "http://localhost:8080#cruzared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "256",
    "lexicalEntryUri" : "http://localhost:8080#cruzared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "River",
    "returnType" : "Bridge",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/crosses> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "257",
    "lexicalEntryUri" : "http://localhost:8080#crear_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "258",
    "lexicalEntryUri" : "http://localhost:8080#crear_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "259",
    "lexicalEntryUri" : "http://localhost:8080#Casarse_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "260",
    "lexicalEntryUri" : "http://localhost:8080#Casarse_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "261",
    "lexicalEntryUri" : "http://localhost:8080#escribir_3ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "262",
    "lexicalEntryUri" : "http://localhost:8080#escribir_3ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "263",
    "lexicalEntryUri" : "http://localhost:8080#operate_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "264",
    "lexicalEntryUri" : "http://localhost:8080#operate_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Organisation",
    "returnType" : "LaunchPad",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/operator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "265",
    "lexicalEntryUri" : "http://localhost:8080#compusoed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "266",
    "lexicalEntryUri" : "http://localhost:8080#compusoed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/musicComposer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "267",
    "lexicalEntryUri" : "http://localhost:8080#descubrired",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "268",
    "lexicalEntryUri" : "http://localhost:8080#descubrired",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "CelestialBody",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/discoverer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "269",
    "lexicalEntryUri" : "http://localhost:8080#painted",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "270",
    "lexicalEntryUri" : "http://localhost:8080#painted",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Work",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/artist> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "271",
    "lexicalEntryUri" : "http://localhost:8080#escribir_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "272",
    "lexicalEntryUri" : "http://localhost:8080#escribir_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/composer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "273",
    "lexicalEntryUri" : "http://localhost:8080#actuadoed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "274",
    "lexicalEntryUri" : "http://localhost:8080#actuadoed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/starring> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "275",
    "lexicalEntryUri" : "http://localhost:8080#ganared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "276",
    "lexicalEntryUri" : "http://localhost:8080#ganared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Award",
    "returnType" : "Scientist",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/award> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "277",
    "lexicalEntryUri" : "http://localhost:8080#cuestaed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "278",
    "lexicalEntryUri" : "http://localhost:8080#cuestaed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Number",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/budget> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "279",
    "lexicalEntryUri" : "http://localhost:8080#publicared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "280",
    "lexicalEntryUri" : "http://localhost:8080#publicared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Book",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/publisher> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "281",
    "lexicalEntryUri" : "http://localhost:8080#exhibited",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "282",
    "lexicalEntryUri" : "http://localhost:8080#exhibited",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Museum",
    "returnType" : "Artwork",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/museum> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "283",
    "lexicalEntryUri" : "http://localhost:8080#primero_en_ascender_aled",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Mountain",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "284",
    "lexicalEntryUri" : "http://localhost:8080#primero_en_ascender_aled",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "THING",
    "returnType" : "Mountain",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/firstAscentPerson> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "285",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "286",
    "lexicalEntryUri" : "http://localhost:8080#dise�ar_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "287",
    "lexicalEntryUri" : "http://localhost:8080#hablared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "288",
    "lexicalEntryUri" : "http://localhost:8080#hablared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Country",
    "returnType" : "Language",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/language> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "289",
    "lexicalEntryUri" : "http://localhost:8080#dirigired",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "290",
    "lexicalEntryUri" : "http://localhost:8080#dirigired",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Film",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/director> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "291",
    "lexicalEntryUri" : "http://localhost:8080#Casarse_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "292",
    "lexicalEntryUri" : "http://localhost:8080#Casarse_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/spouse> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "293",
    "lexicalEntryUri" : "http://localhost:8080#crear_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "294",
    "lexicalEntryUri" : "http://localhost:8080#crear_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/creator> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "295",
    "lexicalEntryUri" : "http://localhost:8080#fundar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "296",
    "lexicalEntryUri" : "http://localhost:8080#fundar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Pope",
    "returnType" : "Agent",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundedBy> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "297",
    "lexicalEntryUri" : "http://localhost:8080#actu�ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "298",
    "lexicalEntryUri" : "http://localhost:8080#actu�ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "299",
    "lexicalEntryUri" : "http://localhost:8080#Play_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "300",
    "lexicalEntryUri" : "http://localhost:8080#Play_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "301",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "302",
    "lexicalEntryUri" : "http://localhost:8080#inspirar_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/influenced> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "303",
    "lexicalEntryUri" : "http://localhost:8080#contieneed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Food",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "304",
    "lexicalEntryUri" : "http://localhost:8080#contieneed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "THING",
    "returnType" : "Food",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "305",
    "lexicalEntryUri" : "http://localhost:8080#desarrollar_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "306",
    "lexicalEntryUri" : "http://localhost:8080#desarrollar_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Software",
    "returnType" : "Company",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "307",
    "lexicalEntryUri" : "http://localhost:8080#dise�ared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "308",
    "lexicalEntryUri" : "http://localhost:8080#dise�ared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Architect",
    "returnType" : "ArchitecturalStructure",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/architect> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "309",
    "lexicalEntryUri" : "http://localhost:8080#producened",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "Company",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "310",
    "lexicalEntryUri" : "http://localhost:8080#producened",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Ship",
    "returnType" : "Company",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/product> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "311",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_2ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "312",
    "lexicalEntryUri" : "http://localhost:8080#participate_in_2ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "MilitaryConflict",
    "returnType" : "Person",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/battle> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "313",
    "lexicalEntryUri" : "http://localhost:8080#moderared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "314",
    "lexicalEntryUri" : "http://localhost:8080#moderared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "TelevisionShow",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/presenter> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "315",
    "lexicalEntryUri" : "http://localhost:8080#atendered",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "316",
    "lexicalEntryUri" : "http://localhost:8080#atendered",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Airport",
    "returnType" : "Airline",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/targetAirport> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "317",
    "lexicalEntryUri" : "http://localhost:8080#crear_3ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "318",
    "lexicalEntryUri" : "http://localhost:8080#crear_3ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "Website",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/author> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "319",
    "lexicalEntryUri" : "http://localhost:8080#play_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "320",
    "lexicalEntryUri" : "http://localhost:8080#play_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "FictionalCharacter",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/portrayer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "321",
    "lexicalEntryUri" : "http://localhost:8080#desarrollared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "322",
    "lexicalEntryUri" : "http://localhost:8080#desarrollared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Agent",
    "returnType" : "VideoGame",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/developer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "323",
    "lexicalEntryUri" : "http://localhost:8080#escribir_1ed",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "324",
    "lexicalEntryUri" : "http://localhost:8080#escribir_1ed",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "Person",
    "returnType" : "Song",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/writer> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "325",
    "lexicalEntryUri" : "http://localhost:8080#expresared",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "326",
    "lexicalEntryUri" : "http://localhost:8080#expresared",
    "language" : "ES",
    "type" : "NP",
    "bindingType" : "THING",
    "returnType" : "Colour",
    "frameType" : "APP",
    "sentenceTemplate" : null,
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/connotation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "327",
    "lexicalEntryUri" : "http://localhost:8080#alto_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "BasketballPlayer",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "¿Quién es jugador de baloncesto m�s alto?", "¿Quién es m�s alto jugador de baloncesto?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/BasketballPlayer> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "328",
    "lexicalEntryUri" : "http://localhost:8080#alto_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "BasketballPlayer",
    "returnType" : "THING",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo de alta es ($x | BasketballPlayer_NP)?", "¿Cómo de de alta ($x | BasketballPlayer_NP)?", "¿Cómo de de alta jugador de baloncesto ($x | BasketballPlayer_NP)?", "¿Cómo es alta jugador de baloncesto de ($x | BasketballPlayer_NP)?", "¿Cómo es alta XX jugador de baloncesto de ($x | BasketballPlayer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "329",
    "lexicalEntryUri" : "http://localhost:8080#joven_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "DartsPlayer",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "¿Quién es jugador de dardos m�s joven?", "¿Quién es m�s joven jugador de dardos?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/DartsPlayer> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "330",
    "lexicalEntryUri" : "http://localhost:8080#joven_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "DartsPlayer",
    "returnType" : "THING",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo de de joven ($x | DartsPlayer_NP)?", "¿Cómo de de joven jugador de dardos ($x | DartsPlayer_NP)?", "¿Cómo de joven es ($x | DartsPlayer_NP)?", "¿Cómo es joven jugador de dardos de ($x | DartsPlayer_NP)?", "¿Cómo es joven XX jugador de dardos de ($x | DartsPlayer_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "331",
    "lexicalEntryUri" : "http://localhost:8080#Alta_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Lighthouse",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "¿Cuál es faro m�s alta de ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Lighthouse> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Place",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "332",
    "lexicalEntryUri" : "http://localhost:8080#Alta_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Lighthouse",
    "returnType" : "Place",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo de de m�s alta ($x | Lighthouse_NP)?", "¿Cómo de de m�s alta faro ($x | Lighthouse_NP)?", "¿Cómo de m�s alta es ($x | Lighthouse_NP)?", "¿Cómo es m�s alta faro de ($x | Lighthouse_NP)?", "¿Cómo es m�s alta XX faro de ($x | Lighthouse_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "333",
    "lexicalEntryUri" : "http://localhost:8080#Alta_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeCountry",
    "sentences" : [ "¿Cuál es monta�as m�s alta in ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Mountain> . ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/elevation> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "334",
    "lexicalEntryUri" : "http://localhost:8080#Alta_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo es m�s alta monta�as in ($x | Mountain_NP)?", "¿Cómo es m�s alta XX monta�as in ($x | Mountain_NP)?", "¿Cómo in in m�s alta ($x | Mountain_NP)?", "¿Cómo in in m�s alta monta�as ($x | Mountain_NP)?", "¿Cómo in m�s alta es ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/elevation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "335",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Politician",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "¿Quién es masculine m�s joven?", "¿Quién es m�s joven masculine?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Politician> . ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "336",
    "lexicalEntryUri" : "http://localhost:8080#Young_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Politician",
    "returnType" : "THING",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo es joven masculine in ($x | Politician_NP)?", "¿Cómo es joven XX masculine in ($x | Politician_NP)?", "¿Cómo in in joven ($x | Politician_NP)?", "¿Cómo in in joven masculine ($x | Politician_NP)?", "¿Cómo in joven es ($x | Politician_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "337",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Country",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "¿Quién es el m�s amplio masculine?", "¿Quién es masculine el m�s amplio?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Country> . ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "338",
    "lexicalEntryUri" : "http://localhost:8080#large_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "THING",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo es amplio masculine in ($x | Country_NP)?", "¿Cómo es amplio XX masculine in ($x | Country_NP)?", "¿Cómo in amplio es ($x | Country_NP)?", "¿Cómo in in amplio ($x | Country_NP)?", "¿Cómo in in amplio masculine ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/areaTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "339",
    "lexicalEntryUri" : "http://localhost:8080#mayor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativePerson",
    "sentences" : [ "¿Cuál es series televisivas mas mayor de ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?objOfProp WHERE { ?VARIABLE <http://dbpedia.org/ontology/child> ?objOfProp . ?objOfProp <http://dbpedia.org/ontology/birthDate> ?num . } ORDER BY ASC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Person",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "340",
    "lexicalEntryUri" : "http://localhost:8080#mayor",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Person",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo de de mas mayor ($x | Person_NP)?", "¿Cómo de de mas mayor series televisivas ($x | Person_NP)?", "¿Cómo de mas mayor es ($x | Person_NP)?", "¿Cómo es mas mayor series televisivas de ($x | Person_NP)?", "¿Cómo es mas mayor XX series televisivas de ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "341",
    "lexicalEntryUri" : "http://localhost:8080#alto_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Model",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeWorld",
    "sentences" : [ "¿Quién es modelo m�s alto?", "¿Quién es m�s alto modelo?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Model> . ?subjOfProp <http://dbpedia.org/ontology/height> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://www.w3.org/2002/07/owl#Thing",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "342",
    "lexicalEntryUri" : "http://localhost:8080#alto_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Model",
    "returnType" : "THING",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo es alta modelo in ($x | Model_NP)?", "¿Cómo es alta XX modelo in ($x | Model_NP)?", "¿Cómo in alta es ($x | Model_NP)?", "¿Cómo in in alta ($x | Model_NP)?", "¿Cómo in in alta modelo ($x | Model_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/height> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "343",
    "lexicalEntryUri" : "http://localhost:8080#big",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Stadium",
    "frameType" : "AG",
    "sentenceTemplate" : "superlativeLocation",
    "sentences" : [ "¿Cuál es estadio m�s grande de ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : "SELECT DISTINCT ?subjOfProp WHERE { ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Stadium> . ?subjOfProp <http://dbpedia.org/ontology/location> ?VARIABLE . ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?num . } ORDER BY DESC(?num) LIMIT 1",
    "bindingListType" : "http://dbpedia.org/ontology/Country",
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "344",
    "lexicalEntryUri" : "http://localhost:8080#big",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Stadium",
    "returnType" : "Country",
    "frameType" : "AG",
    "sentenceTemplate" : "adjectiveBaseForm",
    "sentences" : [ "¿Cómo de de grande ($x | Stadium_NP)?", "¿Cómo de de grande estadio ($x | Stadium_NP)?", "¿Cómo de grande es ($x | Stadium_NP)?", "¿Cómo es grande estadio de ($x | Stadium_NP)?", "¿Cómo es grande XX estadio de ($x | Stadium_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/seatingCapacity> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "345",
    "lexicalEntryUri" : "http://localhost:8080#necesarios_para",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Food",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que   es necesarios ($x | Food_NP)?", "¿Donde están necesarios ($x | Food_NP)?", "¿Dónde necesarios ($x | Food_NP)?", "¿En qué   necesarios ($x | Food_NP)?", "¿En qué   se necesarios ($x | Food_NP)?", "¿Por qué   necesarios ($x | Food_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "346",
    "lexicalEntryUri" : "http://localhost:8080#necesarios_para",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Food",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué   son necesarios para ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/ingredient> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "347",
    "lexicalEntryUri" : "http://localhost:8080#programado_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Work",
    "returnType" : "Language",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que pa�ses es programado ($x | Work_NP)?", "¿Donde están programado ($x | Work_NP)?", "¿Dónde programado ($x | Work_NP)?", "¿En qué pa�ses programado ($x | Work_NP)?", "¿En qué pa�ses se programado ($x | Work_NP)?", "¿Por qué pa�ses programado ($x | Work_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "348",
    "lexicalEntryUri" : "http://localhost:8080#programado_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Work",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué pa�ses son programado en ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "349",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Language",
    "returnType" : "Software",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que pa�ses es escribi� ($x | Language_NP)?", "¿Donde están escribi� ($x | Language_NP)?", "¿Dónde escribi� ($x | Language_NP)?", "¿En qué pa�ses escribi� ($x | Language_NP)?", "¿En qué pa�ses se escribir ($x | Language_NP)?", "¿Por qué pa�ses escribi� ($x | Language_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "350",
    "lexicalEntryUri" : "http://localhost:8080#written_in",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Software",
    "returnType" : "Language",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué pa�ses son escribi� en ($x | Software_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/programmingLanguage> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "351",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es localizaba ($x | Location_NP)?", "¿Donde están localizaba ($x | Location_NP)?", "¿Dónde localizaba ($x | Location_NP)?", "¿En qué feminine localizaba ($x | Location_NP)?", "¿En qué feminine se localizar ($x | Location_NP)?", "¿Por qué feminine localizaba ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "352",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Location",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son localizaba en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "353",
    "lexicalEntryUri" : "http://localhost:8080#nace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es naci� ($x | River_NP)?", "¿Donde están naci� ($x | River_NP)?", "¿Dónde naci� ($x | River_NP)?", "¿En qué feminine naci� ($x | River_NP)?", "¿En qué feminine se nacer ($x | River_NP)?", "¿Por qué feminine naci� ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "354",
    "lexicalEntryUri" : "http://localhost:8080#nace",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son naci� en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/mouthLocation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "355",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿De qué muri� ($x | Person_NP)?", "¿Quién es muri� ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "356",
    "lexicalEntryUri" : "http://localhost:8080#die_from_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : "PERSON_CAUSE",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathCause> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "357",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es pasa ($x | River_NP)?", "¿Donde están pasa ($x | River_NP)?", "¿Dónde pasa ($x | River_NP)?", "¿En qué feminine pasa ($x | River_NP)?", "¿En qué feminine se pasa ($x | River_NP)?", "¿Por qué feminine pasa ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "358",
    "lexicalEntryUri" : "http://localhost:8080#flow_through_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son pasa por ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "359",
    "lexicalEntryUri" : "http://localhost:8080#fliessen_durch_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que masculine es fluy� ($x | River_NP)?", "¿Donde están fluy� ($x | River_NP)?", "¿Dónde fluy� ($x | River_NP)?", "¿En qué masculine fluy� ($x | River_NP)?", "¿En qué masculine se fluir ($x | River_NP)?", "¿Por qué masculine fluy� ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "360",
    "lexicalEntryUri" : "http://localhost:8080#fliessen_durch_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué masculine son fluy� por ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "361",
    "lexicalEntryUri" : "http://localhost:8080#fliessen_durch_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "River",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es fluy� ($x | River_NP)?", "¿Donde están fluy� ($x | River_NP)?", "¿Dónde fluy� ($x | River_NP)?", "¿En qué feminine fluy� ($x | River_NP)?", "¿En qué feminine se fluir ($x | River_NP)?", "¿Por qué feminine fluy� ($x | River_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "362",
    "lexicalEntryUri" : "http://localhost:8080#fliessen_durch_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "River",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son fluy� por ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/city> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "363",
    "lexicalEntryUri" : "http://localhost:8080#founded_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Company",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo fund� ($x | Company_NP)?", "¿Cuándo se fundar ($x | Company_NP)?", "¿Cuándo se fund� ($x | Company_NP)?", "¿En qué a�o fundado ($x | Company_NP)?", "¿En qué a�os ($x | Company_NP) fundado?", "¿En qué a�os fundado ($x | Company_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "364",
    "lexicalEntryUri" : "http://localhost:8080#founded_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Company",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/foundingYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "365",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde sit�a ($x | City_NP)?", "¿En qué masculine se sit�a ($x | City_NP)?", "¿En qué masculine sit�a ($x | City_NP)?", "¿Por qué masculine sit�a ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "366",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_5",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "367",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se completar ($x | Ship_NP)?", "¿Cuándo se complet� ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "368",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Ship",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "369",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Ship",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se completar ($x | Ship_NP)?", "¿Cuándo se complet� ($x | Ship_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "370",
    "lexicalEntryUri" : "http://localhost:8080#complete_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Ship",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/completionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "371",
    "lexicalEntryUri" : "http://localhost:8080#celebrarse",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se celebrarse ($x | MilitaryConflict_NP)?", "¿Cuándo se celebr� ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "372",
    "lexicalEntryUri" : "http://localhost:8080#celebrarse",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "373",
    "lexicalEntryUri" : "http://localhost:8080#Viven_4",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Single",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es vive ($x | City_NP)?", "¿Donde están vive ($x | City_NP)?", "¿Dónde vive ($x | City_NP)?", "¿En qué feminine se viven ($x | City_NP)?", "¿En qué feminine vive ($x | City_NP)?", "¿Por qué feminine vive ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "374",
    "lexicalEntryUri" : "http://localhost:8080#Viven_4",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Single",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son vive en ($x | Single_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "375",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "PopulatedPlace",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se disolver ($x | PopulatedPlace_NP)?", "¿Cuándo se disolvi� ($x | PopulatedPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "376",
    "lexicalEntryUri" : "http://localhost:8080#dissolve_on_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "PopulatedPlace",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/dissolutionDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "377",
    "lexicalEntryUri" : "http://localhost:8080#born_on_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Actor",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde fue naci� ($x | Actor_NP)?", "¿Dónde naci� ($x | Actor_NP)?", "¿Qué Lage nacer en ($x | Actor_NP)?", "¿Qué feminine nacer en ($x | Actor_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "378",
    "lexicalEntryUri" : "http://localhost:8080#born_on_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Actor",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué actor nacer ($x | Place_NP)?", "¿En qué actor naci� ($x | Place_NP)?", "¿Qué actor nacer en ($x | Place_NP)?", "¿Qué actores nacer en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "379",
    "lexicalEntryUri" : "http://localhost:8080#gestorben_am",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo muri� ($x | Person_NP)?", "¿Cuándo se morir ($x | Person_NP)?", "¿Cuándo se muri� ($x | Person_NP)?", "¿En qué a�o muerto ($x | Person_NP)?", "¿En qué a�os ($x | Person_NP) muerto?", "¿En qué a�os muerto ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "380",
    "lexicalEntryUri" : "http://localhost:8080#gestorben_am",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathDate> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "381",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que camino es empez� ($x | Road_NP)?", "¿Donde están empez� ($x | Road_NP)?", "¿Dónde empez� ($x | Road_NP)?", "¿En qué camino empez� ($x | Road_NP)?", "¿En qué camino se empezar ($x | Road_NP)?", "¿Por qué camino empez� ($x | Road_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "382",
    "lexicalEntryUri" : "http://localhost:8080#start_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué camino son empez� en ($x | Road_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeStart> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "383",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "HistoricPlace",
    "returnType" : "Location",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es situadas ($x | HistoricPlace_NP)?", "¿Donde están situadas ($x | HistoricPlace_NP)?", "¿Dónde situadas ($x | HistoricPlace_NP)?", "¿En qué feminine se situadas ($x | HistoricPlace_NP)?", "¿En qué feminine situadas ($x | HistoricPlace_NP)?", "¿Por qué feminine situadas ($x | HistoricPlace_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "384",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "HistoricPlace",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son situadas en ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "385",
    "lexicalEntryUri" : "http://localhost:8080#vino",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "Location",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es vino ($x | Grape_NP)?", "¿Donde están vino ($x | Grape_NP)?", "¿Dónde vino ($x | Grape_NP)?", "¿En qué feminine se vino ($x | Grape_NP)?", "¿En qué feminine vino ($x | Grape_NP)?", "¿Por qué feminine vino ($x | Grape_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "386",
    "lexicalEntryUri" : "http://localhost:8080#vino",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Grape",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son vino de ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/wineRegion> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "387",
    "lexicalEntryUri" : "http://localhost:8080#end_in",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Road",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es termin� ($x | Road_NP)?", "¿Donde están termin� ($x | Road_NP)?", "¿Dónde termin� ($x | Road_NP)?", "¿En qué feminine se terminar ($x | Road_NP)?", "¿En qué feminine termin� ($x | Road_NP)?", "¿Por qué feminine termin� ($x | Road_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "388",
    "lexicalEntryUri" : "http://localhost:8080#end_in",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Road",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son termin� en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/routeEnd> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "389",
    "lexicalEntryUri" : "http://localhost:8080#tuvo_lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se tuvo lugar ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "390",
    "lexicalEntryUri" : "http://localhost:8080#tuvo_lugar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "391",
    "lexicalEntryUri" : "http://localhost:8080#Viven_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Number",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuántas   Personas viven en ($x | Country_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "392",
    "lexicalEntryUri" : "http://localhost:8080#Viven_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Number",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : "HOW_MANY_TOTAL",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/populationTotal> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "393",
    "lexicalEntryUri" : "http://localhost:8080#comenzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se comenzar ($x | MilitaryConflict_NP)?", "¿Cuándo se comenz� ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "394",
    "lexicalEntryUri" : "http://localhost:8080#comenzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "395",
    "lexicalEntryUri" : "http://localhost:8080#comenzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryConflict",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo se comenzar ($x | MilitaryConflict_NP)?", "¿Cuándo se comenz� ($x | MilitaryConflict_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "396",
    "lexicalEntryUri" : "http://localhost:8080#comenzar",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "MilitaryConflict",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHAT_PAST_THING",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/date> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "397",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "WineRegion",
    "returnType" : "Grape",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Qué tipo de uva creci� en ($x | WineRegion_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "398",
    "lexicalEntryUri" : "http://localhost:8080#grow_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Grape",
    "returnType" : "WineRegion",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_2",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/growingGrape> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "399",
    "lexicalEntryUri" : "http://localhost:8080#morir_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde fue muri� ($x | City_NP)?", "¿Dónde muri� ($x | City_NP)?", "¿Qué ciudad morir en ($x | City_NP)?", "¿Qué feminine morir en ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "400",
    "lexicalEntryUri" : "http://localhost:8080#morir_en",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué series televisivas morir ($x | Person_NP)?", "¿En qué series televisivas muri� ($x | Person_NP)?", "¿Qué feminine morir en ($x | Person_NP)?", "¿Qué series televisivas morir en ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/deathPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "401",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Mountain",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde se situ� ($x | Mountain_NP)?", "¿En qué masculine se se situ� ($x | Mountain_NP)?", "¿En qué masculine se situ� ($x | Mountain_NP)?", "¿Por qué masculine se situ� ($x | Mountain_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "402",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_6",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Mountain",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/locatedInArea> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "403",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Lake",
    "returnType" : "Country",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde encuentra ($x | Lake_NP)?", "¿En qué masculine encuentra ($x | Lake_NP)?", "¿En qué masculine se encuentra ($x | Lake_NP)?", "¿Por qué masculine encuentra ($x | Lake_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "404",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_4",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Country",
    "returnType" : "Lake",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_LOCATION",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "405",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde fue viv�a ($x | Person_NP)?", "¿Dónde viv�a ($x | Person_NP)?", "¿Qué ciudad vivir en ($x | Person_NP)?", "¿Qué feminine vivir en ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "406",
    "lexicalEntryUri" : "http://localhost:8080#live_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué series televisivas vivir ($x | City_NP)?", "¿En qué series televisivas viv�a ($x | City_NP)?", "¿Qué feminine vivir en ($x | City_NP)?", "¿Qué series televisivas vivir en ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "407",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde fue naci� ($x | Person_NP)?", "¿Dónde naci� ($x | Person_NP)?", "¿Qué Lage nacer en ($x | Person_NP)?", "¿Qué feminine nacer en ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "408",
    "lexicalEntryUri" : "http://localhost:8080#born_on_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué series televisivas nacer ($x | Place_NP)?", "¿En qué series televisivas naci� ($x | Place_NP)?", "¿Qué feminine nacer en ($x | Place_NP)?", "¿Qué series televisivas nacer en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "409",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "date",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Cuándo naci� ($x | Person_NP)?", "¿Cuándo se nacer ($x | Person_NP)?", "¿Cuándo se naci� ($x | Person_NP)?", "¿En qué a�o nacido ($x | Person_NP)?", "¿En qué a�os ($x | Person_NP) nacido?", "¿En qué a�os nacido ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "410",
    "lexicalEntryUri" : "http://localhost:8080#born_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "date",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHEN_WHO_PAST_PERSON",
    "sentences" : [ ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthYear> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "411",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "MilitaryUnit",
    "returnType" : "Location",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que feminine es encuentra ($x | MilitaryUnit_NP)?", "¿Donde están encuentra ($x | MilitaryUnit_NP)?", "¿Dónde encuentra ($x | MilitaryUnit_NP)?", "¿En qué feminine encuentra ($x | MilitaryUnit_NP)?", "¿En qué feminine se encuentra ($x | MilitaryUnit_NP)?", "¿Por qué feminine encuentra ($x | MilitaryUnit_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "412",
    "lexicalEntryUri" : "http://localhost:8080#locate_in_2",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "MilitaryUnit",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué feminine son encuentra en ($x | Location_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/property/location> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "413",
    "lexicalEntryUri" : "http://localhost:8080#Viven_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "City",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde fue vive ($x | City_NP)?", "¿Dónde vive ($x | City_NP)?", "¿Qué ciudad viven en ($x | City_NP)?", "¿Qué feminine viven en ($x | City_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "414",
    "lexicalEntryUri" : "http://localhost:8080#Viven_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "City",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué series televisivas vive ($x | Person_NP)?", "¿En qué series televisivas viven ($x | Person_NP)?", "¿Qué feminine viven en ($x | Person_NP)?", "¿Qué series televisivas viven en ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/residence> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "415",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Surfing",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde fue naci� ($x | Surfing_NP)?", "¿Dónde naci� ($x | Surfing_NP)?", "¿Qué Lage nacer en ($x | Surfing_NP)?", "¿Qué feminine nacer en ($x | Surfing_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "416",
    "lexicalEntryUri" : "http://localhost:8080#born_on_3",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Surfing",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué surfistas profesionales nacer ($x | Place_NP)?", "¿En qué surfistas profesionales naci� ($x | Place_NP)?", "¿Qué surfistas profesionales nacer en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/birthPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "417",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Place",
    "returnType" : "Person",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "¿Dónde enterr� ($x | Place_NP)?", "¿Dónde fue enterr� ($x | Place_NP)?", "¿Qué Lage enterrar en ($x | Place_NP)?", "¿Qué feminine enterrar en ($x | Place_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "418",
    "lexicalEntryUri" : "http://localhost:8080#bury_in_1",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Person",
    "returnType" : "Place",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHERE_WHO_PAST_PERSON",
    "sentences" : [ "¿En qué series televisivas enterrar ($x | Person_NP)?", "¿En qué series televisivas enterr� ($x | Person_NP)?", "¿Qué feminine enterrar en ($x | Person_NP)?", "¿Qué series televisivas enterrar en ($x | Person_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/restingPlace> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "419",
    "lexicalEntryUri" : "http://localhost:8080#abrevia",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : null,
    "sentences" : [ "De que ciudades es abrevia ($x | THING_NP)?", "¿Donde están abrevia ($x | THING_NP)?", "¿Dónde abrevia ($x | THING_NP)?", "¿En qué ciudades abrevia ($x | THING_NP)?", "¿En qué ciudades se abrevia ($x | THING_NP)?", "¿Por qué ciudades abrevia ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "objOfProp"
    },
    "returnVariable" : "subjOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "420",
    "lexicalEntryUri" : "http://localhost:8080#abrevia",
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "THING",
    "returnType" : "THING",
    "frameType" : "IPP",
    "sentenceTemplate" : "WHAT_WHICH_PRESENT_THING_1",
    "sentences" : [ "¿Qué ciudades son abrevia para ($x | THING_NP)?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(bgp (triple ?subjOfProp <http://dbpedia.org/ontology/abbreviation> ?objOfProp))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  }, {
    "id" : "421",
    "lexicalEntryUri" : null,
    "language" : "ES",
    "type" : "SENTENCE",
    "bindingType" : "Location",
    "returnType" : "Location",
    "frameType" : "FULL_DATASET",
    "sentenceTemplate" : null,
    "sentences" : [ "Where is $x located?" ],
    "queryType" : "SELECT",
    "sparqlQuery" : "(join\n  (union\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/country> ?objOfProp))\n    (bgp (triple ?subjOfProp <http://dbpedia.org/ontology/location> ?objOfProp)))\n  (bgp\n    (triple ?objOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n    (triple ?subjOfProp <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dbpedia.org/ontology/Location>)\n  ))\n",
    "executable" : null,
    "bindingListType" : null,
    "sentenceToSparqlParameterMapping" : {
      "$x" : "subjOfProp"
    },
    "returnVariable" : "objOfProp",
    "sentenceBindings" : {
      "bindingVariableName" : "$x",
      "bindingList" : [ ]
    },
    "qaldMatchedQuestion" : null,
    "combination" : false
  } ]
}